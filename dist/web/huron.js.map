{"version":3,"sources":["../../src/web/huron.js"],"names":["md5","require","module","hot","accept","InsertNodes","constructor","modules","store","_modules","_moduleIds","Object","keys","_config","_sections","_templates","_prototypes","_types","meta","cycleModules","cycleStyleguide","applyModifier","modifier","rendered","data","assign","render","convertToElement","content","el","document","createElement","innerHTML","firstElementChild","filterModules","filter","moduleMeta","match","hasOwnProperty","call","values","value","property","Boolean","length","include","console","log","generateModuleHash","key","getDataAttribute","tag","attr","dataset","getAttribute","isSectionHelper","type","hasAttribute","context","moduleList","elementList","regenCache","querySelectorAll","getModuleListFromTags","forEach","replaceElements","loadModule","cycleSections","sectionsQuery","querySelector","menuQuery","outputSections","menuTrigger","classList","add","body","insertBefore","appendChild","childNodes","addEventListener","toggle","outputMenu","getMetaFromPath","sections","sectionsByPath","templateTypes","id","indexOf","prototype","name","_sectionTemplatePath","testTypes","testSections","section","tempTypes","currentType","referenceURI","hashKey","renderData","getModuleRender","hash","warn","getModuleKeyFromTag","sectionsByURI","elements","recurse","newList","element","moduleKey","push","concat","cached","shouldLoad","replaceTemplate","parent","sorted","templateId","newEl","hasSubmenu","menuTarget","nextMenu","title","header","sectionMenu","menuItem","link","tagName","cloneNode","placeholder","istopLevel","topLevelWrapper","topLevelSection","insertionEl","huronId","huronType","removeOldTags","parentHash","selfHash","childrenHash","nextTag","previousSibling","parentNode","removeChild","validateType","tags","replace","hasStyleguideHelpers","tagType","tagId","currentTag","modifiedPlaceholder","renderedTemplate","renderedContents","children","nodeType","style","display","includes","_store","config","templates","prototypes","types","sectionTemplatePath","insert"],"mappings":"AAAA,MAAMA,MAAMC,QAAQ,QAAR,CAAZ;;AAEA;AACA;AACA,IAAIC,OAAOC,GAAX,EAAgB;AACdD,SAAOC,GAAP,CAAWC,MAAX;AACD;;AAED;;;;;AAKA,MAAMC,WAAN,CAAkB;;AAEhBC,cAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAC1B;AACA,SAAKC,QAAL,GAAgBF,OAAhB;AACA;AACA,SAAKG,UAAL,GAAkBC,OAAOC,IAAP,CAAYL,OAAZ,CAAlB;AACA;AACA,SAAKM,OAAL,GAAe,IAAf;AACA;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA;AACA,SAAKC,MAAL,GAAc,IAAd;;AAEA;AACA,SAAKC,IAAL,GAAY,EAAZ;;AAEA;AACA,SAAKV,KAAL,GAAaA,KAAb;;AAEA;AACA,SAAKW,YAAL;AACA,SAAKC,eAAL;AACD;;AAED;;;;;;;AAOA,SAAOC,aAAP,CAAqBC,QAArB,EAA+BJ,IAA/B,EAAqC;AACnC,QAAIK,WAAW,KAAf;AACA,QAAIC,OAAON,KAAKM,IAAhB;;AAEA,QAAIA,IAAJ,EAAU;AACR;AACA,UAAIF,YAAYJ,KAAKM,IAAL,CAAUF,QAAV,CAAhB,EAAqC;AACnCE,eAAOb,OAAOc,MAAP,CAAc,EAAd,EAAkBP,KAAKM,IAAL,CAAUF,QAAV,CAAlB,EAAuC,EAAEA,QAAF,EAAvC,CAAP;AACD;;AAEDC,iBAAWL,KAAKQ,MAAL,CAAYF,IAAZ,CAAX;AACD,KAPD,MAOO;AACLD,iBAAWL,KAAKQ,MAAL,EAAX;AACD;;AAED,WAAOH,QAAP;AACD;;AAED;;;;;;AAMA,SAAOI,gBAAP,CAAwBC,OAAxB,EAAiC;AAC/B,UAAMC,KAAKC,SAASC,aAAT,CAAuB,KAAvB,CAAX;;AAEAF,OAAGG,SAAH,GAAeJ,OAAf;AACA,WAAOC,GAAGI,iBAAV;AACD;;AAED;;;;;;;;;;AAUA,SAAOC,aAAP,CAAqBC,MAArB,EAA6BC,UAA7B,EAAyC;AACvC,QAAIC,QAAQ,IAAZ;;AAEA;AACA,QACE,aAAa,OAAOF,MAApB,IACA,GAAGG,cAAH,CAAkBC,IAAlB,CAAuBJ,MAAvB,EAA+B,UAA/B,CADA,IAEA,GAAGG,cAAH,CAAkBC,IAAlB,CAAuBJ,MAAvB,EAA+B,QAA/B,CAFA,IAGA,GAAGG,cAAH,CAAkBC,IAAlB,CAAuBJ,MAAvB,EAA+B,SAA/B,CAJF,EAKE;AACAE,cAAQF,OAAOK,MAAP,CAAcL,MAAd,CACLM,KAAD,IAAWL,WAAWD,OAAOO,QAAlB,MAAgCD,KADrC,CAAR;AAGA,aAAOE,QAAQN,MAAMO,MAAd,MAA0BT,OAAOU,OAAxC;AACD;;AAEDC,YAAQC,GAAR,CAAa;eACFZ,MAAO;;KADlB;;AAKA,WAAOE,KAAP;AACD;;AAED;;;;;;AAMA,SAAOW,kBAAP,CAA0BC,GAA1B,EAA+B;AAC7B,WAAOjD,IAAIiD,GAAJ,CAAP;AACD;;AAED;;;;;;;AAOA,SAAOC,gBAAP,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACjC,QAAI5B,OAAO,KAAX;;AAEA;AACA,QAAI2B,IAAIE,OAAR,EAAiB;AACf7B,aAAO2B,IAAIE,OAAJ,CAAYD,IAAZ,CAAP;AACD;;AAED;AACA,QAAI,CAAE5B,IAAF,IAAU2B,IAAIG,YAAlB,EAAgC;AAC9B9B,aAAO2B,IAAIG,YAAJ,CAAkB,QAAOF,IAAK,EAA9B,CAAP;AACD;;AAED,WAAO5B,IAAP;AACD;;AAED;;;;;;;AAOA,SAAO+B,eAAP,CAAuBJ,GAAvB,EAA4BjC,IAA5B,EAAkC;AAChC,QAAI,gBAAgBA,KAAKsC,IAAzB,EAA+B;AAC7B,aAAOL,IAAIM,YAAJ,CAAiB,gBAAjB,KACLN,IAAIM,YAAJ,CAAiB,YAAjB,CADF;AAED;;AAED,WAAO,KAAP;AACD;;AAED;;;;;;AAMAtC,eAAauC,UAAU,KAAvB,EAA8BvB,SAAS,KAAvC,EAA8C;AAC5C,QAAIwB,aAAa,EAAjB;AACA,QAAIC,cAAcF,OAAlB;;AAEA;AACA,QAAI,CAAEE,WAAN,EAAmB;AACjB,WAAKC,UAAL;;AAEA;AACAD,oBAAc,CAAC,GAAG9B,SAASgC,gBAAT,CAChB,kCADgB,CAAJ,CAAd;AAGD;;AAEDH,iBAAa,KAAKI,qBAAL,CAA2BH,WAA3B,CAAb;;AAEA;AACAjD,WAAOC,IAAP,CAAY+C,UAAZ,EAAwBK,OAAxB,CAAiCf,GAAD,IAAS;AACvC,YAAM/C,SAAS,KAAKO,QAAL,CAAcwC,GAAd,CAAf;AACA,YAAMgB,kBAAkBN,WAAWV,GAAX,CAAxB;;AAEA,WAAKiB,UAAL,CAAgBjB,GAAhB,EAAqB/C,MAArB,EAA6B+D,eAA7B,EAA8C,IAA9C,EAAoD9B,MAApD;AACD,KALD;AAMD;;AAED;;;AAGAgC,kBAAgB;AACd,SAAKhD,YAAL,CAAkB,KAAlB,EAAyB;AACvBuB,gBAAU,MADa;AAEvBF,cAAQ,CAAC,SAAD,CAFe;AAGvBK,eAAS;AAHc,KAAzB;AAKD;;AAED;;;AAGAzB,oBAAkB;AAChB,UAAMgD,gBAAgBtC,SAASuC,aAAT,CAAuB,kBAAvB,CAAtB;AACA,UAAMC,YAAYxC,SAASuC,aAAT,CAAuB,cAAvB,CAAlB;;AAEA;AACA,QAAID,aAAJ,EAAmB;AACjBA,oBAAcpC,SAAd,GAA0B,EAA1B;AACA,WAAKuC,cAAL,CAAoB,IAApB,EAA0BH,aAA1B;AACA,WAAKD,aAAL;AACD;;AAED;AACA,QAAIG,SAAJ,EAAe;AACbA,gBAAUtC,SAAV,GAAsB,EAAtB;;AAEA,UAAI,SAASF,SAASuC,aAAT,CAAuB,uBAAvB,CAAb,EAA8D;AAC5D,cAAMG,cAAc1C,SAASC,aAAT,CAAuB,QAAvB,CAApB;;AAEAyC,oBAAYC,SAAZ,CAAsBC,GAAtB,CAA0B,sBAA1B;AACAF,oBAAYxC,SAAZ,GAAwB,eAAxB;AACAF,iBAAS6C,IAAT,CAAcC,YAAd,CACEN,UAAUO,WAAV,CAAsBL,WAAtB,CADF,EAEE1C,SAAS6C,IAAT,CAAcG,UAAd,CAAyB,CAAzB,CAFF;;AAKA;AACAN,oBAAYO,gBAAZ,CAA6B,OAA7B,EAAsC,MAAM;AAC1CjD,mBAAS6C,IAAT,CAAcF,SAAd,CAAwBO,MAAxB,CAA+B,mBAA/B;AACD,SAFD;AAGD;;AAED;AACA,WAAKC,UAAL,CAAgB,IAAhB,EAAsBX,SAAtB;AACD;AACF;;AAED;;;;;;AAMAY,kBAAgBjC,GAAhB,EAAqB/C,MAArB,EAA6B;AAC3B,UAAMiF,WAAW,KAAKrE,SAAL,CAAesE,cAAhC;AACA,UAAMC,gBAAgB,KAAKpE,MAAL,CAAYkB,MAAZ,CAAoBqB,IAAD,IAAU,gBAAgBA,IAA7C,CAAtB;AACA,QAAI8B,KAAK,KAAT;AACA,QAAI9B,OAAO,KAAX;;AAEA;AACA,QAAI,CAAC,CAAD,KAAOP,IAAIsC,OAAJ,CAAY,cAAZ,CAAX,EAAwC;AACxC;AACE,YAAMC,YAAY7E,OAAOC,IAAP,CAAY,KAAKI,WAAjB,EACfmB,MADe,CACPsD,IAAD,IAAU,KAAKzE,WAAL,CAAiByE,IAAjB,MAA2BxC,GAD7B,CAAlB;;AAGA,UAAIuC,UAAU5C,MAAd,EAAsB;AACpB0C,aAAKE,UAAU,CAAV,CAAL;AACAhC,eAAO,WAAP;AACD;AACF,KATD,MASO,IAAIP,QAAQ,KAAKyC,oBAAjB,EAAuC;AAC5CJ,WAAK,mBAAL;AACA9B,aAAO,mBAAP;AACD,KAHM,MAGA;AACL,UAAImC,YAAY,EAAhB;AACA,YAAMC,eAAejF,OAAOC,IAAP,CAAYuE,QAAZ,EAAsBhD,MAAtB,CAA8B0D,OAAD,IAAa;AAC7D,cAAMC,YAAYT,cAAclD,MAAd,CACf4D,WAAD,IAAiBZ,SAASU,OAAT,EAAmB,GAAEE,WAAY,MAAjC,MAA4C9C,GAD7C,CAAlB;;AAIA,YAAI6C,UAAUlD,MAAd,EAAsB;AACpB+C,sBAAYG,SAAZ;AACA,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OAXoB,CAArB;;AAaA,UACEF,gBACAA,aAAahD,MADb,IAEA+C,SAFA,IAGAA,UAAU/C,MAJZ,EAKE;AACA0C,aAAKH,SAASS,aAAa,CAAb,CAAT,EAA0BI,YAA/B;AACAxC,eAAOmC,UAAU,CAAV,CAAP;AACD;AACF;;AAED,QAAIL,MAAM9B,IAAV,EAAgB;AACd,YAAMyC,UAAU,WAAWzC,IAAX,GAAkB,KAAKzC,UAAL,CAAgBkC,GAAhB,CAAlB,GAAyCA,GAAzD;AACA,YAAMiD,aAAa,KAAKC,eAAL,CAAqB3C,IAArB,EAA2BP,GAA3B,EAAgC/C,MAAhC,CAAnB;AACA,YAAMkG,OAAO/F,YAAY2C,kBAAZ,CAA+BiD,OAA/B,CAAb;;AAEA,UAAIC,UAAJ,EAAgB;AACd,eAAOvF,OAAOc,MAAP,CAAc,EAAE6D,EAAF,EAAM9B,IAAN,EAAYP,GAAZ,EAAiBmD,IAAjB,EAAuBlG,MAAvB,EAAd,EAA+CgG,UAA/C,CAAP;AACD;AACF;;AAEDpD,YAAQuD,IAAR,EAAc;AACX,eAAUpD,GAAI;6BADjB;AAIA,WAAO,KAAP;AACD;;AAED;;;;;;;AAOAqD,sBAAoBnD,GAApB,EAAyB;AACvB;AACA;AACA,UAAMK,OAAOnD,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,YAAlC,CAAb;AACA,UAAMmC,KAAKjF,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,UAAlC,CAAX;AACA,UAAM0C,UAAU,KAAK/E,SAAL,CAAeyF,aAAf,CAA6BjB,EAA7B,CAAhB;;AAEA,QAAIA,MAAM9B,IAAV,EAAgB;AACd,UAAIqC,OAAJ,EAAa;AACX,eAAOA,QAAS,GAAErC,IAAK,MAAhB,CAAP;AACD,OAFD,MAEO,IAAI,gBAAgBA,IAApB,EAA0B;AAC/B,eAAO,KAAKxC,WAAL,CAAiBsE,EAAjB,CAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD;;AAED;;;;;;;AAOAvB,wBAAsByC,QAAtB,EAAgCC,UAAU,IAA1C,EAAgD;AAC9C,UAAM9C,aAAa,EAAnB;AACA,QAAI+C,UAAU,EAAd;;AAEA,QAAIF,YAAYA,SAAS5D,MAAzB,EAAiC;AAC/B4D,eAASxC,OAAT,CAAkB2C,OAAD,IAAa;AAC5B,cAAMC,YAAY,KAAKN,mBAAL,CAAyBK,OAAzB,CAAlB;;AAEA,YAAIC,SAAJ,EAAe;AACb,cAAI,CAAEjD,WAAWiD,SAAX,CAAN,EAA6B;AAC3BjD,uBAAWiD,SAAX,IAAwB,EAAxB;AACD;AACDjD,qBAAWiD,SAAX,EAAsBC,IAAtB,CAA2BF,OAA3B;AACD,SALD,MAKO,IAAIF,OAAJ,EAAa;AAClBC,oBAAU,KAAK3C,qBAAL,CACR,CAAC,GAAG4C,QAAQ7C,gBAAR,CAAyB,kCAAzB,CAAJ,CADQ,EAER,KAFQ,CAAV;;AAKAnD,iBAAOC,IAAP,CAAY8F,OAAZ,EAAqB1C,OAArB,CAA8Bf,GAAD,IAAS;AACpCU,uBAAWV,GAAX,IAAkBU,WAAWV,GAAX,IAChBU,WAAWV,GAAX,EAAgB6D,MAAhB,CAAuBJ,QAAQzD,GAAR,CAAvB,CADgB,GAEhByD,QAAQzD,GAAR,CAFF;AAGD,WAJD;AAKD;AACF,OApBD;AAqBD;;AAED,WAAOU,UAAP;AACD;;AAED;;;;;;;AAOAwC,kBAAgB3C,IAAhB,EAAsBP,GAAtB,EAA2B/C,MAA3B,EAAmC;AACjC,QAAIwB,SAAS,KAAb;AACA,QAAIF,OAAO,KAAX;;AAEA,QAAI,eAAegC,IAAf,IAAuB,eAAe,OAAOtD,MAAjD,EAAyD;AACvD;AACAwB,eAASxB,MAAT;AACAsB,aAAO,KAAKf,QAAL,CAAc,KAAKM,UAAL,CAAgBkC,GAAhB,CAAd,CAAP;AACD,KAJD,MAIO,IACL,wBAAwBO,IAAxB,IACA,eAAe,OAAOtD,MAFjB,EAGL;AACA;AACAwB,eAASxB,MAAT;AACD,KANM,MAMA,IACL,cAAcsD,IAAd,IACA,aAAa,OAAOtD,MAFf,EAGL;AACA;AACAwB,eAAS,KAAKjB,QAAL,CAAc,KAAKiF,oBAAnB,CAAT;AACAlE,aAAOtB,MAAP;AACD,KAPM,MAOA,IACL,CAAC,eAAesD,IAAf,IAAuB,kBAAkBA,IAAzC,IAAiD,gBAAgBA,IAAlE,KACA,aAAa,OAAOtD,MAFf,EAGL;AACA;AACAwB,eAAS,MAAMxB,MAAf;AACD,KANM,MAMA,IAAI,WAAWsD,IAAX,IAAmB,aAAa,OAAOtD,MAA3C,EAAmD;AACxD;AACAwB,eAAS,KAAKjB,QAAL,CAAc,KAAKM,UAAL,CAAgBkC,GAAhB,CAAd,CAAT;AACAzB,aAAOtB,MAAP;AACD;;AAED;AACA,QAAIwB,MAAJ,EAAY;AACV,aAAO,EAAEA,MAAF,EAAUF,IAAV,EAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAED;;;;;;;;;AASA0C,aAAWjB,GAAX,EAAgB/C,MAAhB,EAAwB+D,eAAxB,EAAyC8C,SAAS,KAAlD,EAAyD5E,SAAS,KAAlE,EAAyE;AACvE,QAAI6E,aAAa,IAAjB;AACA,QAAI5E,aAAa,KAAjB;;AAEA;AACA,QAAI2E,MAAJ,EAAY;AACV3E,mBAAa,KAAKlB,IAAL,CAAU+B,GAAV,CAAb;AACD,KAFD,MAEO;AACLb,mBAAa,KAAKlB,IAAL,CAAU+B,GAAV,IAAiB,KAAKiC,eAAL,CAAqBjC,GAArB,EAA0B/C,MAA1B,CAA9B;AACD;;AAED,QAAIkC,UAAJ,EAAgB;AACd,UAAID,MAAJ,EAAY;AACV6E,qBAAa3G,YAAY6B,aAAZ,CAA0BC,MAA1B,EAAkCC,UAAlC,CAAb;AACD;;AAED,UAAI4E,UAAJ,EAAgB;AACd,aAAKC,eAAL,CAAqB7E,UAArB,EAAiC6B,eAAjC;AACD;AACF;AACF;;AAED;;;;;AAKAgB,aAAWiC,MAAX,EAAmBrF,EAAnB,EAAuBsD,WAAW,KAAKrE,SAAL,CAAeqG,MAAjD,EAAyD;AACvD,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAQxF,EAAZ;;AAEAlB,WAAOC,IAAP,CAAYuE,QAAZ,EAAsBnB,OAAtB,CAA+B6B,OAAD,IAAa;AACzC,YAAMyB,aAAa3G,OAAOC,IAAP,CAAYuE,SAASU,OAAT,CAAZ,EAA+BjD,MAAlD;AACA,UAAI2E,UAAJ;AACA,UAAIC,QAAJ;;AAEA,UAAIN,MAAJ,EAAY;AACVE,qBAAc,GAAEF,MAAO,IAAGrB,OAAQ,EAAlC;AACD,OAFD,MAEO;AACLuB,qBAAavB,OAAb;AACD;;AAED,UAAIwB,KAAJ,EAAW;AACT,cAAMI,QAAQ,KAAK3G,SAAL,CACTyF,aADS,CACKa,UADL,IAEZ,KAAKtG,SAAL,CACGyF,aADH,CACiBa,UADjB,EAEGM,MAJS,GAKZN,UALF;AAMA,cAAMO,cAAc7F,SAASC,aAAT,CAAuB,IAAvB,CAApB;AACA,cAAM6F,WAAW9F,SAASC,aAAT,CAAuB,IAAvB,CAAjB;AACA,cAAM8F,OAAQ,gCAA+BT,UAAW,KAAIK,KAAM,MAAlE;;AAEAE,oBAAYlD,SAAZ,CAAsBC,GAAtB,CAA0B,cAA1B;AACAkD,iBAASnD,SAAT,CAAmBC,GAAnB,CAAuB,oBAAvB;AACAkD,iBAAS5F,SAAT,GAAqB6F,IAArB;;AAEA;AACA,YAAI,SAASR,MAAMS,OAAnB,EAA4B;AAC1BP,uBAAaI,YAAYI,SAAZ,EAAb;AACAV,gBAAMxC,WAAN,CAAkB0C,UAAlB;AACAF,kBAAQE,UAAR;AACD;;AAED;AACA,YAAID,UAAJ,EAAgB;AACdE,qBAAWG,YAAYI,SAAZ,EAAX;AACAP,mBAAS/C,SAAT,CAAmBC,GAAnB,CAAuB,uBAAvB;AACAkD,mBAASnD,SAAT,CAAmBC,GAAnB,CAAuB,iCAAvB;AACAkD,mBAAS/C,WAAT,CAAqB2C,QAArB;AACD;;AAEDH,cAAMxC,WAAN,CAAkB+C,QAAlB;;AAEA,YAAIN,UAAJ,EAAgB;AACd,eAAKrC,UAAL,CACEmC,UADF,EAEEI,QAFF,EAGErC,SAASU,OAAT,CAHF;AAKD;AACF;AACF,KAnDD;AAoDD;;AAED;;;;;AAKAtB,iBAAe2C,MAAf,EAAuBrF,EAAvB,EAA2BsD,WAAW,KAAKrE,SAAL,CAAeqG,MAArD,EAA6D;AAC3D,QAAIC,aAAa,IAAjB;AACA,QAAIY,cAAc,IAAlB;;AAEArH,WAAOC,IAAP,CAAYuE,QAAZ,EAAsBnB,OAAtB,CAA+B6B,OAAD,IAAa;AACzC,UAAIoC,aAAa,KAAjB;AACA,UAAIC,kBAAkB,IAAtB;AACA,UAAIC,kBAAkB,IAAtB;AACA,UAAIC,cAAcvG,EAAlB;;AAEA;AACA,UAAIqF,MAAJ,EAAY;AACVE,qBAAc,GAAEF,MAAO,IAAGrB,OAAQ,EAAlC;AACD,OAFD,MAEO;AACLuB,qBAAavB,OAAb;AACAoC,qBAAa,IAAb;AACD;;AAED,UAAIpG,EAAJ,EAAQ;AACN;AACAmG,sBAAclG,SAASC,aAAT,CAAuB,KAAvB,CAAd;AACAiG,oBAAY3E,OAAZ,CAAoBgF,OAApB,GAA8BjB,UAA9B;AACAY,oBAAY3E,OAAZ,CAAoBiF,SAApB,GAAgC,SAAhC;;AAEA,YAAIL,UAAJ,EAAgB;AACd;AACAC,4BAAkBpG,SAASC,aAAT,CAAuB,KAAvB,CAAlB;AACAmG,0BAAgBzD,SAAhB,CAA0BC,GAA1B,CAA8B,6BAA9B;;AAEA;AACAyD,4BAAkBrG,SAASC,aAAT,CAAuB,KAAvB,CAAlB;AACAoG,0BAAgB1D,SAAhB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyC,oBAAzC;;AAEA;AACAyD,0BAAgBtD,WAAhB,CAA4BmD,WAA5B;AACAE,0BAAgBrD,WAAhB,CAA4BsD,eAA5B;AACAtG,aAAGgD,WAAH,CAAeqD,eAAf;AACAE,wBAAcF,eAAd;AACD,SAdD,MAcO;AACL;AACArG,aAAGgD,WAAH,CAAemD,WAAf;AACD;AACF;;AAED;AACA,UAAIrH,OAAOC,IAAP,CAAYuE,SAASU,OAAT,CAAZ,EAA+BjD,MAA/B,IAAyCoF,WAA7C,EAA0D;AACxD,aAAKzD,cAAL,CACE6C,UADF,EAEEgB,WAFF,EAGEjD,SAASU,OAAT,CAHF;AAKD;AACF,KAhDD;AAiDD;;AAED;;;AAGAhC,eAAa;AACXlD,WAAOC,IAAP,CAAY,KAAKH,QAAjB,EAA2BuD,OAA3B,CAAoC4C,SAAD,IAAe;AAChD,WAAK1F,IAAL,CAAU0F,SAAV,IAAuB,KAAK1B,eAAL,CACrB0B,SADqB,EACV,KAAKnG,QAAL,CAAcmG,SAAd,CADU,CAAvB;AAGD,KAJD;AAKD;;AAED;;;;;;;AAOA2B,gBAAcnC,IAAd,EAAoBjD,GAApB,EAAyB;AACvB,QAAIA,GAAJ,EAAS;AACP,YAAMqF,aAAanI,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,aAAlC,CAAnB;AACA,YAAMsF,WAAWpI,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,WAAlC,CAAjB;;AAEA,UAAIqF,eAAepC,IAAf,IAAuBqC,aAAarC,IAAxC,EAA8C;AAC5C;AACA;AACA,cAAMsC,eAAeD,QAArB;AACA,YAAIE,UAAUxF,IAAIyF,eAAlB;;AAEA,YAAIF,YAAJ,EAAkB;AAChB,eAAKH,aAAL,CAAmBG,YAAnB,EAAiCC,OAAjC;AACA;AACAA,oBAAUxF,IAAIyF,eAAd;AACD;;AAEDzF,YAAI0F,UAAJ,CAAeC,WAAf,CAA2B3F,GAA3B;AACA,aAAKoF,aAAL,CAAmBnC,IAAnB,EAAyBuC,OAAzB;AACD;AACF;AACF;;AAED;;;;;;AAMA1B,kBAAgB/F,IAAhB,EAAsB+C,eAAtB,EAAuC;AACrC,UAAMT,OAAO,KAAKuF,YAAL,CAAkB7H,KAAKsC,IAAvB,CAAb;AACA,UAAMwF,OAAO,EAAb;AACA,QAAIC,UAAUhF,eAAd;AACA,QAAIiF,uBAAuB,KAA3B;;AAEA,QAAI,CAAED,OAAN,EAAe;AACbA,gBAAUnH,SAASgC,gBAAT,CACR,kCADQ,CAAV;AAGD;;AAED,QAAIN,IAAJ,EAAU;AACRyF,cAAQjF,OAAR,CAAiBb,GAAD,IAAS;AACvB,cAAMgG,UAAU9I,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,YAAlC,CAAhB;AACA,cAAMiG,QAAQ/I,YAAY6C,gBAAZ,CAA6BC,GAA7B,EAAkC,UAAlC,CAAd;;AAEA,YAAIiG,UAAUlI,KAAKoE,EAAf,IAAqB6D,YAAY3F,IAArC,EAA2C;AACzCwF,eAAKnC,IAAL,CAAU1D,GAAV;AACD;AACF,OAPD;;AASA,UAAI6F,QAAQA,KAAKpG,MAAb,IAAuB1B,KAAKQ,MAAhC,EAAwC;AACtCsH,aAAKhF,OAAL,CAAcqF,UAAD,IAAgB;AAC3B,gBAAMC,sBAAsBD,UAA5B;AACA,gBAAM/H,WAAWjB,YACd6C,gBADc,CACGoG,mBADH,EACwB,gBADxB,CAAjB;AAEA,gBAAMpC,SAASoC,oBAAoBT,UAAnC;AACA,gBAAMtH,WAAWlB,YAAYgB,aAAZ,CAA0BC,QAA1B,EAAoCJ,IAApC,CAAjB;AACA,gBAAMqI,mBAAmBlJ,YAAYsB,gBAAZ,CAA6BJ,QAA7B,EACpB8C,aADoB,CACN,UADM,CAAzB;AAEA,cAAImF,mBAAmB,IAAvB;;AAEA;AACA,eAAKjB,aAAL,CAAmBrH,KAAKkF,IAAxB,EAA8BkD,oBAAoBV,eAAlD;;AAEA;AACAY,6BAAmB,CACjB,GAAGD,iBAAiB3H,OAAjB,CAAyB6H,QADX,CAAnB;;AAIA;AACAD,2BAAiBxF,OAAjB,CAA0B2C,OAAD,IAAa;AACpC,kBAAMU,QAAQV,OAAd;;AAEA,gBAAI,MAAMU,MAAMqC,QAAhB,EAA0B;AACxBrC,oBAAMhE,OAAN,CAAcmF,UAAd,GAA2BtH,KAAKkF,IAAhC;AACA8C,qCAAuB,CAAEA,oBAAF,GACrB7I,YAAYkD,eAAZ,CAA4B8D,KAA5B,EAAmCnG,IAAnC,CADqB,GAErBgI,oBAFF;;AAIAhC,qBAAOtC,YAAP,CAAoByC,KAApB,EAA2BiC,mBAA3B;AACD;AACF,WAXD;;AAaA;AACAA,8BAAoBjG,OAApB,CAA4BoF,QAA5B,GAAuCvH,KAAKkF,IAA5C;;AAEA;AACAkD,8BAAoBK,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;;AAEA;AACA,eAAKzI,YAAL,CAAkBqI,gBAAlB,EAAoC;AAClC9G,sBAAU,KADwB;AAElCF,oBAAQ,CAACtB,KAAK+B,GAAN,EAAW,KAAKyC,oBAAhB,CAF0B;AAGlC7C,qBAAS;AAHyB,WAApC;;AAMA,cAAIqG,oBAAJ,EAA0B;AACxB,iBAAK9H,eAAL;AACD;AACF,SAhDD;AAiDD;AACF,KA7DD,MA6DO;AACL0B,cAAQuD,IAAR,EAAc;AACX;mBACUnF,KAAKoE,EAAG;gBACXpE,KAAKsC,IAAK,EAHpB;AAKD;AACF;;AAED;;;;;;AAMAuF,eAAavF,IAAb,EAAmB;AACjB,QAAI,WAAWA,IAAf,EAAqB;AACnB,aAAO,UAAP;AACD;;AAED,QAAI,CAAE,KAAKvC,MAAL,CAAY4I,QAAZ,CAAqBrG,IAArB,CAAN,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED,WAAOA,IAAP;AACD;;AAED;;;AAGA,MAAIjD,OAAJ,CAAYA,OAAZ,EAAqB;AACnB,SAAKE,QAAL,GAAgBF,OAAhB;AACA,SAAKG,UAAL,GAAkBC,OAAOC,IAAP,CAAYL,OAAZ,CAAlB;AACD;;AAED;;;AAGA,MAAIC,KAAJ,CAAUA,KAAV,EAAiB;AACf,SAAKsJ,MAAL,GAActJ,KAAd;AACA,SAAKK,OAAL,GAAeL,MAAMuJ,MAArB;AACA,SAAKjJ,SAAL,GAAiBN,MAAM2E,QAAvB;AACA,SAAKpE,UAAL,GAAkBP,MAAMwJ,SAAxB;AACA,SAAKhJ,WAAL,GAAmBR,MAAMyJ,UAAzB;AACA,SAAKhJ,MAAL,GAAcT,MAAM0J,KAApB;AACA,SAAKxE,oBAAL,GAA4BlF,MAAM2J,mBAAlC;AACD;AA1tBe;AA4tBlB;;AAEA;AACA;AACA;AACA;AACA,MAAMC,SAAS,IAAI/J,WAAJ,CAAgBE,OAAhB,EAAyBC,KAAzB,CAAf;AACA","file":"huron.js","sourcesContent":["const md5 = require('js-md5');\n\n/* eslint-disable no-underscore-dangle */\n// Accept the huron.js module for Huron development\nif (module.hot) {\n  module.hot.accept();\n}\n\n/** Class for inserting HTML snippets at particular insertion points.\n * Uses require() to grab html partials, then inserts that html\n * into an element with attribute [huron-id] corresponding to the reference URI of the target KSS section,\n * and [huron-type] corresponding with the required KSS field\n */\nclass InsertNodes {\n\n  constructor(modules, store) {\n    /** webpack module list in which keys are relative require paths and values are the module contents */\n    this._modules = modules;\n    /** array of module keys */\n    this._moduleIds = Object.keys(modules);\n    /** reference to the huron config */\n    this._config = null;\n    /** KSS sections organized in various formats including by reference URI, by module key, and modules sorted by parent/child */\n    this._sections = null;\n    /** Key/value pairs of partner data and template files */\n    this._templates = null;\n    /** array of prototypes */\n    this._prototypes = null;\n    /** array of valid huron placeholder types */\n    this._types = null;\n\n    /** Cache for module metadata */\n    this.meta = {};\n\n    /** Reference to entire memory store */\n    this.store = store;\n\n    // Inits\n    this.cycleModules();\n    this.cycleStyleguide();\n  }\n\n  /**\n   * Apply a modifier to a render function\n   *\n   * @param {string} modifier - target modifier\n   * @param {object} meta - module metadata\n   * @return {string} rendered - the modified HTML module\n   */\n  static applyModifier(modifier, meta) {\n    let rendered = false;\n    let data = meta.data;\n\n    if (data) {\n      // If we have a modifier, use it, otherwise use the entire data set\n      if (modifier && meta.data[modifier]) {\n        data = Object.assign({}, meta.data[modifier], { modifier });\n      }\n\n      rendered = meta.render(data);\n    } else {\n      rendered = meta.render();\n    }\n\n    return rendered;\n  }\n\n  /**\n   * Get markup from any type of module (html, json or template)\n   *\n   * @param {string} content - String corresponding to markup\n   * @return {object} el.firstElementChild - HTML module\n   */\n  static convertToElement(content) {\n    const el = document.createElement('div');\n\n    el.innerHTML = content;\n    return el.firstElementChild;\n  }\n\n  /**\n   * Filter module object by module key or module type\n   *\n   * @param {object} filter - Filter for modules. Options:\n   * @param {string} filter.property - Which property to filter ('key' or 'type')\n   * @param {array} filter.values - Values for property\n   * @param {bool} filter.include - Whether the values should be included or excluded (true = include, false = exclude)\n   * @param {object} moduleMeta - Filter for modules. Fields explained in the filterModules() function docs\n   * @return {bool} match - determine if modules need to be filtered\n   */\n  static filterModules(filter, moduleMeta) {\n    let match = true;\n\n    // Check if we should filter out any modules\n    if (\n      'object' === typeof filter &&\n      {}.hasOwnProperty.call(filter, 'property') &&\n      {}.hasOwnProperty.call(filter, 'values') &&\n      {}.hasOwnProperty.call(filter, 'include')\n    ) {\n      match = filter.values.filter(\n        (value) => moduleMeta[filter.property] === value\n      );\n      return Boolean(match.length) === filter.include;\n    }\n\n    console.log(` // eslint-disable-line no-console\n      filter ${filter} is not in a valid format.\n      module filters must include 'property', 'values', and 'include' properties\n    `);\n\n    return match;\n  }\n\n  /**\n   * Generate a hash string from a module key\n   *\n   * @param {string} key - module key (require path) to convert into a hash\n   * @return {string} key - generated MD5 Hash\n   */\n  static generateModuleHash(key) {\n    return md5(key);\n  }\n\n  /**\n   * Retrieve a data attribute from a tag using one of two methods\n   *\n   * @param {HTMLElement} tag - DOM node on which to check for a data attribute\n   * @param {string} attr - attribute to check for\n   * @returns {string} data - contents of data attribute\n   */\n  static getDataAttribute(tag, attr) {\n    let data = false;\n\n    // Check if element has dataset and, if so, use it\n    if (tag.dataset) {\n      data = tag.dataset[attr];\n    }\n\n    // Fallback to getAttribute for ugly old Safari\n    if (! data && tag.getAttribute) {\n      data = tag.getAttribute(`data-${attr}`);\n    }\n\n    return data;\n  }\n\n  /**\n   * Check if this tag is a styleguide helper\n   *\n   * @param {object} tag - tag to check\n   * @param {object} meta - module metadata\n   * @return {bool}\n   */\n  static isSectionHelper(tag, meta) {\n    if ('prototype' === meta.type) {\n      return tag.hasAttribute('huron-sections') ||\n        tag.hasAttribute('huron-menu');\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace all template markers with the actual template markup.\n   *\n   * @param {string} context - The hash context for the module\n   * @param {object} filter - Filter for modules. Fields explained in the filterModules() function docs\n   */\n  cycleModules(context = false, filter = false) {\n    let moduleList = {};\n    let elementList = context;\n\n    // We're replacing top-level elements\n    if (! elementList) {\n      this.regenCache();\n\n      // Find all top-level huron placeholders\n      elementList = [...document.querySelectorAll(\n        '[data-huron-id][data-huron-type]'\n      )];\n    }\n\n    moduleList = this.getModuleListFromTags(elementList);\n\n    // Loop through modules array\n    Object.keys(moduleList).forEach((key) => {\n      const module = this._modules[key];\n      const replaceElements = moduleList[key];\n\n      this.loadModule(key, module, replaceElements, true, filter);\n    });\n  }\n\n  /**\n   * Helper for reloading sections only\n   */\n  cycleSections() {\n    this.cycleModules(false, {\n      property: 'type',\n      values: ['section'],\n      include: true,\n    });\n  }\n\n  /**\n   * Reload styleguide sections and menu helpers\n   */\n  cycleStyleguide() {\n    const sectionsQuery = document.querySelector('[huron-sections]');\n    const menuQuery = document.querySelector('[huron-menu]');\n\n    // Sections\n    if (sectionsQuery) {\n      sectionsQuery.innerHTML = '';\n      this.outputSections(null, sectionsQuery);\n      this.cycleSections();\n    }\n\n    // Menu\n    if (menuQuery) {\n      menuQuery.innerHTML = '';\n\n      if (null === document.querySelector('.section-menu__expand')) {\n        const menuTrigger = document.createElement('button');\n\n        menuTrigger.classList.add('section-menu__expand');\n        menuTrigger.innerHTML = 'Sections Menu';\n        document.body.insertBefore(\n          menuQuery.appendChild(menuTrigger),\n          document.body.childNodes[0]\n        );\n\n        // Add menu trigger handler\n        menuTrigger.addEventListener('click', () => {\n          document.body.classList.toggle('section-menu-open');\n        });\n      }\n\n      // Create menu\n      this.outputMenu(null, menuQuery);\n    }\n  }\n\n  /**\n   * Get module metadata from a module require path\n   *\n   * @param  {string} key - Module require path\n   * @return {object} containing module id, module type, key and the module contents\n   */\n  getMetaFromPath(key, module) {\n    const sections = this._sections.sectionsByPath;\n    const templateTypes = this._types.filter((type) => 'prototype' !== type);\n    let id = false;\n    let type = false;\n\n    /* eslint-disable space-unary-ops */\n    if (-1 !== key.indexOf('./prototypes')) {\n    /* eslint-enable space-unary-ops */\n      const prototype = Object.keys(this._prototypes)\n        .filter((name) => this._prototypes[name] === key);\n\n      if (prototype.length) {\n        id = prototype[0];\n        type = 'prototype';\n      }\n    } else if (key === this._sectionTemplatePath) {\n      id = 'sections-template';\n      type = 'sections-template';\n    } else {\n      let testTypes = [];\n      const testSections = Object.keys(sections).filter((section) => {\n        const tempTypes = templateTypes.filter(\n          (currentType) => sections[section][`${currentType}Path`] === key\n        );\n\n        if (tempTypes.length) {\n          testTypes = tempTypes;\n          return true;\n        }\n\n        return false;\n      });\n\n      if (\n        testSections &&\n        testSections.length &&\n        testTypes &&\n        testTypes.length\n      ) {\n        id = sections[testSections[0]].referenceURI;\n        type = testTypes[0];\n      }\n    }\n\n    if (id && type) {\n      const hashKey = 'data' === type ? this._templates[key] : key;\n      const renderData = this.getModuleRender(type, key, module);\n      const hash = InsertNodes.generateModuleHash(hashKey);\n\n      if (renderData) {\n        return Object.assign({ id, type, key, hash, module }, renderData);\n      }\n    }\n\n    console.warn( // eslint-disable-line no-console\n      `Module '${key}' does not exist on the page\n      or is no longer in use`\n    );\n    return false;\n  }\n\n  /**\n   * Check if a tag is a huron placeholder and, if so,\n   * return its associated module key\n   *\n   * @param {object} tag - tag to check\n   * @return {bool} associated module key\n   */\n  getModuleKeyFromTag(tag) {\n    // Safari/webkit has some trouble parsing dataset in certain cases.\n    // This is a fallback method of accessing the same data.\n    const type = InsertNodes.getDataAttribute(tag, 'huron-type');\n    const id = InsertNodes.getDataAttribute(tag, 'huron-id');\n    const section = this._sections.sectionsByURI[id];\n\n    if (id && type) {\n      if (section) {\n        return section[`${type}Path`];\n      } else if ('prototype' === type) {\n        return this._prototypes[id];\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if an array of elements contains a Huron placeholder\n   *\n   * @param {array} tags - array of DOM nodes\n   * @param {bool} recurse - should we recurse this function with a new array\n   * @return {object} moduleList - Huron placeholder DOM node\n   */\n  getModuleListFromTags(elements, recurse = true) {\n    const moduleList = {};\n    let newList = {};\n\n    if (elements && elements.length) {\n      elements.forEach((element) => {\n        const moduleKey = this.getModuleKeyFromTag(element);\n\n        if (moduleKey) {\n          if (! moduleList[moduleKey]) {\n            moduleList[moduleKey] = [];\n          }\n          moduleList[moduleKey].push(element);\n        } else if (recurse) {\n          newList = this.getModuleListFromTags(\n            [...element.querySelectorAll('[data-huron-id][data-huron-type]')],\n            false\n          );\n\n          Object.keys(newList).forEach((key) => {\n            moduleList[key] = moduleList[key] ?\n              moduleList[key].concat(newList[key]) :\n              newList[key];\n          });\n        }\n      });\n    }\n\n    return moduleList;\n  }\n\n  /**\n   * Transform every module into a predictable object\n   *\n   * @param {object} type - Module metadata\n   * @param {mixed} module - Module contents\n   * @return {object} containing render function, render data and module id\n   */\n  getModuleRender(type, key, module) {\n    let render = false;\n    let data = false;\n\n    if ('template' === type && 'function' === typeof module) {\n      // It's a render function for a template\n      render = module;\n      data = this._modules[this._templates[key]];\n    } else if (\n      'sections-template' === type &&\n      'function' === typeof module\n    ) {\n      // It's a kss section template\n      render = module;\n    } else if (\n      'section' === type &&\n      'object' === typeof module\n    ) {\n      // It's section data\n      render = this._modules[this._sectionTemplatePath];\n      data = module;\n    } else if (\n      ('template' === type || 'description' === type || 'prototype' === type) &&\n      'string' === typeof module\n    ) {\n      // it's straight HTML\n      render = () => module;\n    } else if ('data' === type && 'object' === typeof module) {\n      // It's a data file (.json)\n      render = this._modules[this._templates[key]];\n      data = module;\n    }\n\n    // Only need render, as data will be left empty for static HTML\n    if (render) {\n      return { render, data };\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace all sections. For hot reloading use when the section template has changed.\n   *\n   * @param {object} replaceElements - The context (e.g. document) that you will query for the template ID to replace\n   * @param {string} key - Module require path\n   * @param {mixed} module - Module contents\n   * @param {bool} cached - Whether or not to use cached values for module replacement\n   * @param {object} filter - Filter for modules. Fields explained in the filterModules() function docs\n   */\n  loadModule(key, module, replaceElements, cached = false, filter = false) {\n    let shouldLoad = true;\n    let moduleMeta = false;\n\n    // Check if we should load from internal module metadata cache\n    if (cached) {\n      moduleMeta = this.meta[key];\n    } else {\n      moduleMeta = this.meta[key] = this.getMetaFromPath(key, module);\n    }\n\n    if (moduleMeta) {\n      if (filter) {\n        shouldLoad = InsertNodes.filterModules(filter, moduleMeta);\n      }\n\n      if (shouldLoad) {\n        this.replaceTemplate(moduleMeta, replaceElements);\n      }\n    }\n  }\n\n  /*\n   * Helper function for inserting styleguide sections.\n   *\n   * Recurses over sorted styleguide sections and inserts a <ul> to be used as a menu for each section\n   */\n  outputMenu(parent, el, sections = this._sections.sorted) {\n    let templateId = null;\n    let newEl = el;\n\n    Object.keys(sections).forEach((section) => {\n      const hasSubmenu = Object.keys(sections[section]).length;\n      let menuTarget;\n      let nextMenu;\n\n      if (parent) {\n        templateId = `${parent}-${section}`;\n      } else {\n        templateId = section;\n      }\n\n      if (newEl) {\n        const title = this._sections\n            .sectionsByURI[templateId] ?\n          this._sections\n            .sectionsByURI[templateId]\n            .header :\n          templateId;\n        const sectionMenu = document.createElement('ul');\n        const menuItem = document.createElement('li');\n        const link = `<a href=\"#styleguide-section-${templateId}\">${title}</a>`;\n\n        sectionMenu.classList.add('section-menu');\n        menuItem.classList.add('section-menu__item');\n        menuItem.innerHTML = link;\n\n        // Check if this is a UL and, if not, create one\n        if ('UL' !== newEl.tagName) {\n          menuTarget = sectionMenu.cloneNode();\n          newEl.appendChild(menuTarget);\n          newEl = menuTarget;\n        }\n\n        // Has subsections\n        if (hasSubmenu) {\n          nextMenu = sectionMenu.cloneNode();\n          nextMenu.classList.add('section-menu--submenu');\n          menuItem.classList.add('section-menu__item--has-submenu');\n          menuItem.appendChild(nextMenu);\n        }\n\n        newEl.appendChild(menuItem);\n\n        if (hasSubmenu) {\n          this.outputMenu(\n            templateId,\n            nextMenu,\n            sections[section]\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Helper function for inserting styleguide sections.\n   *\n   * Recurses over sorted styleguide sections and inserts a <section> tag with [huron-id] equal to the section template name.\n   */\n  outputSections(parent, el, sections = this._sections.sorted) {\n    let templateId = null;\n    let placeholder = null;\n\n    Object.keys(sections).forEach((section) => {\n      let istopLevel = false;\n      let topLevelWrapper = null;\n      let topLevelSection = null;\n      let insertionEl = el;\n\n      // Generate section ID and check if it is top-level\n      if (parent) {\n        templateId = `${parent}-${section}`;\n      } else {\n        templateId = section;\n        istopLevel = true;\n      }\n\n      if (el) {\n        // Generate huron placeholder for this section\n        placeholder = document.createElement('div');\n        placeholder.dataset.huronId = templateId;\n        placeholder.dataset.huronType = 'section';\n\n        if (istopLevel) {\n          // Generate wrapper to contain top-level section and all subsections underneath it\n          topLevelWrapper = document.createElement('div');\n          topLevelWrapper.classList.add('section--top-level__wrapper');\n\n          // Generate wrapper for top-level section\n          topLevelSection = document.createElement('div');\n          topLevelSection.classList.add('section', 'section--top-level');\n\n          // Append wrappers to huron-sections element\n          topLevelSection.appendChild(placeholder);\n          topLevelWrapper.appendChild(topLevelSection);\n          el.appendChild(topLevelWrapper);\n          insertionEl = topLevelWrapper;\n        } else {\n          // If this is not top-level, append placeholder\n          el.appendChild(placeholder);\n        }\n      }\n\n      // Recursively call this function to insert other sections\n      if (Object.keys(sections[section]).length && placeholder) {\n        this.outputSections(\n          templateId,\n          insertionEl,\n          sections[section]\n        );\n      }\n    });\n  }\n\n  /**\n   * Regenerate module meta cache\n   */\n  regenCache() {\n    Object.keys(this._modules).forEach((moduleKey) => {\n      this.meta[moduleKey] = this.getMetaFromPath(\n        moduleKey, this._modules[moduleKey]\n      );\n    });\n  }\n\n  /**\n   * Recursively remove old tags\n   *\n   * @param {string} hash - hash of module for which we need to remove old tags\n   * @param {object} tag - tag to start our search with\n   *                       (usually the tag immediately preceding the current placeholder)\n   */\n  removeOldTags(hash, tag) {\n    if (tag) {\n      const parentHash = InsertNodes.getDataAttribute(tag, 'parent-hash');\n      const selfHash = InsertNodes.getDataAttribute(tag, 'self-hash');\n\n      if (parentHash === hash && selfHash !== hash) {\n        // This is a child of the current module,\n        // so remove it and its children (if applicable)\n        const childrenHash = selfHash;\n        let nextTag = tag.previousSibling;\n\n        if (childrenHash) {\n          this.removeOldTags(childrenHash, nextTag);\n          // Reset nextTag if we removed a child\n          nextTag = tag.previousSibling;\n        }\n\n        tag.parentNode.removeChild(tag);\n        this.removeOldTags(hash, nextTag);\n      }\n    }\n  }\n\n  /**\n   * Replace a single template marker with template content.\n   *\n   * @param {object} replaceElements - Array of elements to check for Huron placeholders\n   * @param {object} meta - Module metadata\n   */\n  replaceTemplate(meta, replaceElements) {\n    const type = this.validateType(meta.type);\n    const tags = [];\n    let replace = replaceElements;\n    let hasStyleguideHelpers = false;\n\n    if (! replace) {\n      replace = document.querySelectorAll(\n        '[data-huron-id][data-huron-type]'\n      );\n    }\n\n    if (type) {\n      replace.forEach((tag) => {\n        const tagType = InsertNodes.getDataAttribute(tag, 'huron-type');\n        const tagId = InsertNodes.getDataAttribute(tag, 'huron-id');\n\n        if (tagId === meta.id && tagType === type) {\n          tags.push(tag);\n        }\n      });\n\n      if (tags && tags.length && meta.render) {\n        tags.forEach((currentTag) => {\n          const modifiedPlaceholder = currentTag;\n          const modifier = InsertNodes\n            .getDataAttribute(modifiedPlaceholder, 'huron-modifier');\n          const parent = modifiedPlaceholder.parentNode;\n          const rendered = InsertNodes.applyModifier(modifier, meta);\n          const renderedTemplate = InsertNodes.convertToElement(rendered)\n              .querySelector('template');\n          let renderedContents = null;\n\n          // Remove existing module tags\n          this.removeOldTags(meta.hash, modifiedPlaceholder.previousSibling);\n\n          // Get the contents of the rendered template\n          renderedContents = [\n            ...renderedTemplate.content.children,\n          ];\n\n          // Insert each tag of the template contents before placeholder\n          renderedContents.forEach((element) => {\n            const newEl = element;\n\n            if (1 === newEl.nodeType) {\n              newEl.dataset.parentHash = meta.hash;\n              hasStyleguideHelpers = ! hasStyleguideHelpers ?\n                InsertNodes.isSectionHelper(newEl, meta) :\n                hasStyleguideHelpers;\n\n              parent.insertBefore(newEl, modifiedPlaceholder);\n            }\n          });\n\n          // Add module hash to this placeholder\n          modifiedPlaceholder.dataset.selfHash = meta.hash;\n\n          // Hide the placeholder\n          modifiedPlaceholder.style.display = 'none';\n\n          // Recursively load modules, excluding the current one\n          this.cycleModules(renderedContents, {\n            property: 'key',\n            values: [meta.key, this._sectionTemplatePath],\n            include: false,\n          });\n\n          if (hasStyleguideHelpers) {\n            this.cycleStyleguide();\n          }\n        });\n      }\n    } else {\n      console.warn( // eslint-disable-line no-console\n        `Could not render module\n        section: ${meta.id}\n        type: ${meta.type}`\n      );\n    }\n  }\n\n  /**\n   * Verify specified element is using an acceptable huron type\n   *\n   * @param  {string} type - type of partial (template, data, description, section or prototype )\n   * @return {string} type - huron type or 'template' if invalid\n   */\n  validateType(type) {\n    if ('data' === type) {\n      return 'template';\n    }\n\n    if (! this._types.includes(type)) {\n      return false;\n    }\n\n    return type;\n  }\n\n  /*\n   * Set new modules object\n   */\n  set modules(modules) {\n    this._modules = modules;\n    this._moduleIds = Object.keys(modules);\n  }\n\n  /*\n   * Set store\n   */\n  set store(store) {\n    this._store = store;\n    this._config = store.config;\n    this._sections = store.sections;\n    this._templates = store.templates;\n    this._prototypes = store.prototypes;\n    this._types = store.types;\n    this._sectionTemplatePath = store.sectionTemplatePath;\n  }\n}\n/* eslint-enable no-underscore-dangle */\n\n// Create a new instance of the InsertNodes class\n/*eslint-disable*/\n// Create object for modifiying the templates on the page and\n// initial first templates.\nconst insert = new InsertNodes(modules, store);\n/*eslint-enable*/\n"]}