{"version":3,"sources":["../../src/web/huron.js"],"names":["md5","require","module","hot","accept","InsertNodes","modules","store","_modules","_moduleIds","Object","keys","_config","_sections","_templates","_prototypes","_types","meta","cycleModules","cycleStyleguide","context","filter","moduleList","elementList","regenCache","document","querySelectorAll","getModuleListFromTags","forEach","key","replaceElements","loadModule","property","values","include","sectionsQuery","querySelector","menuQuery","innerHTML","outputSections","cycleSections","menuTrigger","createElement","classList","add","body","insertBefore","appendChild","childNodes","addEventListener","toggle","outputMenu","sections","sectionsByPath","templateTypes","type","id","indexOf","prototype","name","length","_sectionTemplatePath","testTypes","testSections","section","tempTypes","currentType","referenceURI","hashKey","renderData","getModuleRender","hash","generateModuleHash","assign","console","warn","tag","dataset","huronType","huronId","sectionsByURI","elements","recurse","newList","element","moduleKey","getModuleKeyFromTag","push","concat","render","data","cached","shouldLoad","moduleMeta","getMetaFromPath","filterModules","replaceTemplate","parent","el","sorted","templateId","newEl","hasSubmenu","menuTarget","nextMenu","title","header","sectionMenu","menuItem","link","tagName","cloneNode","placeholder","istopLevel","topLevelWrapper","topLevelSection","insertionEl","parentHash","selfHash","childrenHash","nextTag","previousSibling","removeOldTags","parentNode","removeChild","validateType","tags","replace","hasStyleguideHelpers","currentTag","modifiedPlaceholder","modifier","huronModifier","rendered","applyModifier","renderedTemplate","convertToElement","renderedContents","content","children","nodeType","isSectionHelper","style","display","includes","_store","config","templates","prototypes","types","sectionTemplatePath","firstElementChild","match","hasOwnProperty","call","value","Boolean","log","hasAttribute","insert"],"mappings":";;;;;;;;;;AAAA,IAAMA,MAAMC,QAAQ,QAAR,CAAZ;;AAEA;AACA;AACA,IAAIC,OAAOC,GAAX,EAAgB;AACdD,SAAOC,GAAP,CAAWC,MAAX;AACD;;AAED;;;;;;IAKMC,W;AAEJ,uBAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAC1B;AACA,SAAKC,QAAL,GAAgBF,OAAhB;AACA;AACA,SAAKG,UAAL,GAAkBC,OAAOC,IAAP,CAAYL,OAAZ,CAAlB;AACA;AACA,SAAKM,OAAL,GAAe,IAAf;AACA;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA;AACA,SAAKC,MAAL,GAAc,IAAd;;AAEA;AACA,SAAKC,IAAL,GAAY,EAAZ;;AAEA;AACA,SAAKV,KAAL,GAAaA,KAAb;;AAEA;AACA,SAAKW,YAAL;AACA,SAAKC,eAAL;AACD;;AAED;;;;;;;;;;;;;AAkGA;;;;;;mCAM8C;AAAA;;AAAA,UAAjCC,OAAiC,uEAAvB,KAAuB;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;;AAC5C,UAAIC,aAAa,EAAjB;AACA,UAAIC,cAAcH,OAAlB;;AAEA;AACA,UAAI,CAAEG,WAAN,EAAmB;AACjB,aAAKC,UAAL;;AAEA;AACAD,sBAAcE,SAASC,gBAAT,CACZ,kCADY,CAAd;AAGD;;AAEDJ,mBAAa,KAAKK,qBAAL,CAA2BJ,WAA3B,CAAb;;AAEA;AACAb,aAAOC,IAAP,CAAYW,UAAZ,EAAwBM,OAAxB,CAAgC,UAACC,GAAD,EAAS;AACvC,YAAM3B,SAAS,MAAKM,QAAL,CAAcqB,GAAd,CAAf;AACA,YAAMC,kBAAkBR,WAAWO,GAAX,CAAxB;;AAEA,cAAKE,UAAL,CAAgBF,GAAhB,EAAqB3B,MAArB,EAA6B4B,eAA7B,EAA8C,IAA9C,EAAoDT,MAApD;AACD,OALD;AAMD;;AAED;;;;;;oCAGgB;AACd,WAAKH,YAAL,CAAkB,KAAlB,EAAyB;AACvBc,kBAAU,MADa;AAEvBC,gBAAQ,CAAC,SAAD,CAFe;AAGvBC,iBAAS;AAHc,OAAzB;AAKD;;AAED;;;;;;sCAGkB;AAChB,UAAMC,gBAAgBV,SAASW,aAAT,CAAuB,kBAAvB,CAAtB;AACA,UAAMC,YAAYZ,SAASW,aAAT,CAAuB,cAAvB,CAAlB;;AAEA;AACA,UAAID,aAAJ,EAAmB;AACjBA,sBAAcG,SAAd,GAA0B,EAA1B;AACA,aAAKC,cAAL,CAAoB,IAApB,EAA0BJ,aAA1B;AACA,aAAKK,aAAL;AACD;;AAED;AACA,UAAIH,SAAJ,EAAe;AACbA,kBAAUC,SAAV,GAAsB,EAAtB;;AAEA,YAAI,SAASb,SAASW,aAAT,CAAuB,uBAAvB,CAAb,EAA8D;AAC5D,cAAMK,cAAchB,SAASiB,aAAT,CAAuB,QAAvB,CAApB;;AAEAD,sBAAYE,SAAZ,CAAsBC,GAAtB,CAA0B,sBAA1B;AACAH,sBAAYH,SAAZ,GAAwB,eAAxB;AACAb,mBAASoB,IAAT,CAAcC,YAAd,CACET,UAAUU,WAAV,CAAsBN,WAAtB,CADF,EAEEhB,SAASoB,IAAT,CAAcG,UAAd,CAAyB,CAAzB,CAFF;;AAKA;AACAP,sBAAYQ,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAC1CxB,qBAASoB,IAAT,CAAcF,SAAd,CAAwBO,MAAxB,CAA+B,mBAA/B;AACD,WAFD;AAGD;;AAED;AACA,aAAKC,UAAL,CAAgB,IAAhB,EAAsBd,SAAtB;AACD;AACF;;AAED;;;;;;;;;oCAMgBR,G,EAAK3B,M,EAAQ;AAAA;;AAC3B,UAAMkD,WAAW,KAAKvC,SAAL,CAAewC,cAAhC;AACA,UAAMC,gBAAgB,KAAKtC,MAAL,CAAYK,MAAZ,CAAmB,UAACkC,IAAD;AAAA,eAAU,gBAAgBA,IAA1B;AAAA,OAAnB,CAAtB;AACA,UAAIC,KAAK,KAAT;AACA,UAAID,OAAO,KAAX;;AAEA;AACA,UAAI,CAAC,CAAD,KAAO1B,IAAI4B,OAAJ,CAAY,cAAZ,CAAX,EAAwC;AACxC;AACE,YAAMC,YAAYhD,OAAOC,IAAP,CAAY,KAAKI,WAAjB,EACfM,MADe,CACR,UAACsC,IAAD;AAAA,iBAAU,OAAK5C,WAAL,CAAiB4C,IAAjB,MAA2B9B,GAArC;AAAA,SADQ,CAAlB;;AAGA,YAAI6B,UAAUE,MAAd,EAAsB;AACpBJ,eAAKE,UAAU,CAAV,CAAL;AACAH,iBAAO,WAAP;AACD;AACF,OATD,MASO,IAAI1B,QAAQ,KAAKgC,oBAAjB,EAAuC;AAC5CL,aAAK,mBAAL;AACAD,eAAO,mBAAP;AACD,OAHM,MAGA;AACL,YAAIO,YAAY,EAAhB;AACA,YAAMC,eAAerD,OAAOC,IAAP,CAAYyC,QAAZ,EAAsB/B,MAAtB,CAA6B,UAAC2C,OAAD,EAAa;AAC7D,cAAMC,YAAYX,cAAcjC,MAAd,CAChB,UAAC6C,WAAD;AAAA,mBAAiBd,SAASY,OAAT,EAAqBE,WAArB,eAA4CrC,GAA7D;AAAA,WADgB,CAAlB;;AAIA,cAAIoC,UAAUL,MAAd,EAAsB;AACpBE,wBAAYG,SAAZ;AACA,mBAAO,IAAP;AACD;;AAED,iBAAO,KAAP;AACD,SAXoB,CAArB;;AAaA,YACEF,gBACAA,aAAaH,MADb,IAEAE,SAFA,IAGAA,UAAUF,MAJZ,EAKE;AACAJ,eAAKJ,SAASW,aAAa,CAAb,CAAT,EAA0BI,YAA/B;AACAZ,iBAAOO,UAAU,CAAV,CAAP;AACD;AACF;;AAED,UAAIN,MAAMD,IAAV,EAAgB;AACd,YAAMa,UAAU,WAAWb,IAAX,GAAkB,KAAKzC,UAAL,CAAgBe,GAAhB,CAAlB,GAAyCA,GAAzD;AACA,YAAMwC,aAAa,KAAKC,eAAL,CAAqBf,IAArB,EAA2B1B,GAA3B,EAAgC3B,MAAhC,CAAnB;AACA,YAAMqE,OAAOlE,YAAYmE,kBAAZ,CAA+BJ,OAA/B,CAAb;;AAEA,YAAIC,UAAJ,EAAgB;AACd,iBAAO3D,OAAO+D,MAAP,CAAc,EAAEjB,MAAF,EAAMD,UAAN,EAAY1B,QAAZ,EAAiB0C,UAAjB,EAAuBrE,cAAvB,EAAd,EAA+CmE,UAA/C,CAAP;AACD;AACF;;AAEDK,cAAQC,IAAR,EAAc;AAAd,oBACa9C,GADb;AAIA,aAAO,KAAP;AACD;;AAED;;;;;;;;;;wCAOoB+C,G,EAAK;AACvB,UAAMrB,OAAOqB,IAAIC,OAAJ,CAAYC,SAAzB;AACA,UAAMtB,KAAKoB,IAAIC,OAAJ,CAAYE,OAAvB;AACA,UAAMf,UAAU,KAAKnD,SAAL,CAAemE,aAAf,CAA6BxB,EAA7B,CAAhB;;AAEA,UAAIA,MAAMD,IAAV,EAAgB;AACd,YAAIS,OAAJ,EAAa;AACX,iBAAOA,QAAWT,IAAX,UAAP;AACD,SAFD,MAEO,IAAI,gBAAgBA,IAApB,EAA0B;AAC/B,iBAAO,KAAKxC,WAAL,CAAiByC,EAAjB,CAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;AAED;;;;;;;;;;0CAOsByB,Q,EAA0B;AAAA;;AAAA,UAAhBC,OAAgB,uEAAN,IAAM;;AAC9C,UAAM5D,aAAa,EAAnB;AACA,UAAI6D,UAAU,EAAd;;AAEA,UAAIF,YAAYA,SAASrB,MAAzB,EAAiC;AAC/BqB,iBAASrD,OAAT,CAAiB,UAACwD,OAAD,EAAa;AAC5B,cAAMC,YAAY,OAAKC,mBAAL,CAAyBF,OAAzB,CAAlB;;AAEA,cAAIC,SAAJ,EAAe;AACb,gBAAI,CAAE/D,WAAW+D,SAAX,CAAN,EAA6B;AAC3B/D,yBAAW+D,SAAX,IAAwB,EAAxB;AACD;AACD/D,uBAAW+D,SAAX,EAAsBE,IAAtB,CAA2BH,OAA3B;AACD,WALD,MAKO,IAAIF,OAAJ,EAAa;AAClBC,sBAAU,OAAKxD,qBAAL,8BACJyD,QAAQ1D,gBAAR,CAAyB,kCAAzB,CADI,IAER,KAFQ,CAAV;;AAKAhB,mBAAOC,IAAP,CAAYwE,OAAZ,EAAqBvD,OAArB,CAA6B,UAACC,GAAD,EAAS;AACpCP,yBAAWO,GAAX,IAAkBP,WAAWO,GAAX,IAChBP,WAAWO,GAAX,EAAgB2D,MAAhB,CAAuBL,QAAQtD,GAAR,CAAvB,CADgB,GAEhBsD,QAAQtD,GAAR,CAFF;AAGD,aAJD;AAKD;AACF,SApBD;AAqBD;;AAED,aAAOP,UAAP;AACD;;AAED;;;;;;;;;;oCAOgBiC,I,EAAM1B,G,EAAK3B,M,EAAQ;AACjC,UAAIuF,SAAS,KAAb;AACA,UAAIC,OAAO,KAAX;;AAEA,UAAI,eAAenC,IAAf,IAAuB,eAAe,OAAOrD,MAAjD,EAAyD;AACvD;AACAuF,iBAASvF,MAAT;AACAwF,eAAO,KAAKlF,QAAL,CAAc,KAAKM,UAAL,CAAgBe,GAAhB,CAAd,CAAP;AACD,OAJD,MAIO,IACL,wBAAwB0B,IAAxB,IACA,eAAe,OAAOrD,MAFjB,EAGL;AACA;AACAuF,iBAASvF,MAAT;AACD,OANM,MAMA,IACL,cAAcqD,IAAd,IACA,qBAAoBrD,MAApB,yCAAoBA,MAApB,EAFK,EAGL;AACA;AACAuF,iBAAS,KAAKjF,QAAL,CAAc,KAAKqD,oBAAnB,CAAT;AACA6B,eAAOxF,MAAP;AACD,OAPM,MAOA,IACL,CAAC,eAAeqD,IAAf,IAAuB,kBAAkBA,IAAzC,IAAiD,gBAAgBA,IAAlE,KACA,aAAa,OAAOrD,MAFf,EAGL;AACA;AACAuF,iBAAS;AAAA,iBAAMvF,MAAN;AAAA,SAAT;AACD,OANM,MAMA,IAAI,WAAWqD,IAAX,IAAmB,qBAAoBrD,MAApB,yCAAoBA,MAApB,EAAvB,EAAmD;AACxD;AACAuF,iBAAS,KAAKjF,QAAL,CAAc,KAAKM,UAAL,CAAgBe,GAAhB,CAAd,CAAT;AACA6D,eAAOxF,MAAP;AACD;;AAED;AACA,UAAIuF,MAAJ,EAAY;AACV,eAAO,EAAEA,cAAF,EAAUC,UAAV,EAAP;AACD;;AAED,aAAO,KAAP;AACD;;AAED;;;;;;;;;;;;+BASW7D,G,EAAK3B,M,EAAQ4B,e,EAAiD;AAAA,UAAhC6D,MAAgC,uEAAvB,KAAuB;AAAA,UAAhBtE,MAAgB,uEAAP,KAAO;;AACvE,UAAIuE,aAAa,IAAjB;AACA,UAAIC,aAAa,KAAjB;;AAEA;AACA,UAAIF,MAAJ,EAAY;AACVE,qBAAa,KAAK5E,IAAL,CAAUY,GAAV,CAAb;AACD,OAFD,MAEO;AACLgE,qBAAa,KAAK5E,IAAL,CAAUY,GAAV,IAAiB,KAAKiE,eAAL,CAAqBjE,GAArB,EAA0B3B,MAA1B,CAA9B;AACD;;AAED,UAAI2F,UAAJ,EAAgB;AACd,YAAIxE,MAAJ,EAAY;AACVuE,uBAAavF,YAAY0F,aAAZ,CAA0B1E,MAA1B,EAAkCwE,UAAlC,CAAb;AACD;;AAED,YAAID,UAAJ,EAAgB;AACd,eAAKI,eAAL,CAAqBH,UAArB,EAAiC/D,eAAjC;AACD;AACF;AACF;;AAED;;;;;;;;+BAKWmE,M,EAAQC,E,EAAsC;AAAA;;AAAA,UAAlC9C,QAAkC,uEAAvB,KAAKvC,SAAL,CAAesF,MAAQ;;AACvD,UAAIC,aAAa,IAAjB;AACA,UAAIC,QAAQH,EAAZ;;AAEAxF,aAAOC,IAAP,CAAYyC,QAAZ,EAAsBxB,OAAtB,CAA8B,UAACoC,OAAD,EAAa;AACzC,YAAMsC,aAAa5F,OAAOC,IAAP,CAAYyC,SAASY,OAAT,CAAZ,EAA+BJ,MAAlD;AACA,YAAI2C,mBAAJ;AACA,YAAIC,iBAAJ;;AAEA,YAAIP,MAAJ,EAAY;AACVG,uBAAgBH,MAAhB,SAA0BjC,OAA1B;AACD,SAFD,MAEO;AACLoC,uBAAapC,OAAb;AACD;;AAED,YAAIqC,KAAJ,EAAW;AACT,cAAMI,QAAQ,OAAK5F,SAAL,CACTmE,aADS,CACKoB,UADL,IAEZ,OAAKvF,SAAL,CACGmE,aADH,CACiBoB,UADjB,EAEGM,MAJS,GAKZN,UALF;AAMA,cAAMO,cAAclF,SAASiB,aAAT,CAAuB,IAAvB,CAApB;AACA,cAAMkE,WAAWnF,SAASiB,aAAT,CAAuB,IAAvB,CAAjB;AACA,cAAMmE,yCAAuCT,UAAvC,UAAsDK,KAAtD,SAAN;;AAEAE,sBAAYhE,SAAZ,CAAsBC,GAAtB,CAA0B,cAA1B;AACAgE,mBAASjE,SAAT,CAAmBC,GAAnB,CAAuB,oBAAvB;AACAgE,mBAAStE,SAAT,GAAqBuE,IAArB;;AAEA;AACA,cAAI,SAASR,MAAMS,OAAnB,EAA4B;AAC1BP,yBAAaI,YAAYI,SAAZ,EAAb;AACAV,kBAAMtD,WAAN,CAAkBwD,UAAlB;AACAF,oBAAQE,UAAR;AACD;;AAED;AACA,cAAID,UAAJ,EAAgB;AACdE,uBAAWG,YAAYI,SAAZ,EAAX;AACAP,qBAAS7D,SAAT,CAAmBC,GAAnB,CAAuB,uBAAvB;AACAgE,qBAASjE,SAAT,CAAmBC,GAAnB,CAAuB,iCAAvB;AACAgE,qBAAS7D,WAAT,CAAqByD,QAArB;AACD;;AAEDH,gBAAMtD,WAAN,CAAkB6D,QAAlB;;AAEA,cAAIN,UAAJ,EAAgB;AACd,mBAAKnD,UAAL,CACEiD,UADF,EAEEI,QAFF,EAGEpD,SAASY,OAAT,CAHF;AAKD;AACF;AACF,OAnDD;AAoDD;;AAED;;;;;;;;mCAKeiC,M,EAAQC,E,EAAsC;AAAA;;AAAA,UAAlC9C,QAAkC,uEAAvB,KAAKvC,SAAL,CAAesF,MAAQ;;AAC3D,UAAIC,aAAa,IAAjB;AACA,UAAIY,cAAc,IAAlB;;AAEAtG,aAAOC,IAAP,CAAYyC,QAAZ,EAAsBxB,OAAtB,CAA8B,UAACoC,OAAD,EAAa;AACzC,YAAIiD,aAAa,KAAjB;AACA,YAAIC,kBAAkB,IAAtB;AACA,YAAIC,kBAAkB,IAAtB;AACA,YAAIC,cAAclB,EAAlB;;AAEA;AACA,YAAID,MAAJ,EAAY;AACVG,uBAAgBH,MAAhB,SAA0BjC,OAA1B;AACD,SAFD,MAEO;AACLoC,uBAAapC,OAAb;AACAiD,uBAAa,IAAb;AACD;;AAED,YAAIf,EAAJ,EAAQ;AACN;AACAc,wBAAcvF,SAASiB,aAAT,CAAuB,KAAvB,CAAd;AACAsE,sBAAYnC,OAAZ,CAAoBE,OAApB,GAA8BqB,UAA9B;AACAY,sBAAYnC,OAAZ,CAAoBC,SAApB,GAAgC,SAAhC;;AAEA,cAAImC,UAAJ,EAAgB;AACd;AACAC,8BAAkBzF,SAASiB,aAAT,CAAuB,KAAvB,CAAlB;AACAwE,4BAAgBvE,SAAhB,CAA0BC,GAA1B,CAA8B,6BAA9B;;AAEA;AACAuE,8BAAkB1F,SAASiB,aAAT,CAAuB,KAAvB,CAAlB;AACAyE,4BAAgBxE,SAAhB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyC,oBAAzC;;AAEA;AACAuE,4BAAgBpE,WAAhB,CAA4BiE,WAA5B;AACAE,4BAAgBnE,WAAhB,CAA4BoE,eAA5B;AACAjB,eAAGnD,WAAH,CAAemE,eAAf;AACAE,0BAAcF,eAAd;AACD,WAdD,MAcO;AACL;AACAhB,eAAGnD,WAAH,CAAeiE,WAAf;AACD;AACF;;AAED;AACA,YAAItG,OAAOC,IAAP,CAAYyC,SAASY,OAAT,CAAZ,EAA+BJ,MAA/B,IAAyCoD,WAA7C,EAA0D;AACxD,iBAAKzE,cAAL,CACE6D,UADF,EAEEgB,WAFF,EAGEhE,SAASY,OAAT,CAHF;AAKD;AACF,OAhDD;AAiDD;;AAED;;;;;;iCAGa;AAAA;;AACXtD,aAAOC,IAAP,CAAY,KAAKH,QAAjB,EAA2BoB,OAA3B,CAAmC,UAACyD,SAAD,EAAe;AAChD,eAAKpE,IAAL,CAAUoE,SAAV,IAAuB,OAAKS,eAAL,CACrBT,SADqB,EACV,OAAK7E,QAAL,CAAc6E,SAAd,CADU,CAAvB;AAGD,OAJD;AAKD;;AAED;;;;;;;;;;kCAOcd,I,EAAMK,G,EAAK;AACvB,UAAIA,OAAOA,IAAIC,OAAf,EAAwB;AACtB,YACED,IAAIC,OAAJ,CAAYwC,UAAZ,KAA2B9C,IAA3B,IACAK,IAAIC,OAAJ,CAAYyC,QAAZ,KAAyB/C,IAF3B,EAGE;AACA;AACA;AACA,cAAMgD,eAAe3C,IAAIC,OAAJ,CAAYyC,QAAjC;AACA,cAAIE,UAAU5C,IAAI6C,eAAlB;;AAEA,cAAIF,YAAJ,EAAkB;AAChB,iBAAKG,aAAL,CAAmBH,YAAnB,EAAiCC,OAAjC;AACA;AACAA,sBAAU5C,IAAI6C,eAAd;AACD;;AAED7C,cAAI+C,UAAJ,CAAeC,WAAf,CAA2BhD,GAA3B;AACA,eAAK8C,aAAL,CAAmBnD,IAAnB,EAAyBiD,OAAzB;AACD;AACF;AACF;;AAED;;;;;;;;;oCAMgBvG,I,EAAMa,e,EAAiB;AAAA;;AACrC,UAAMyB,OAAO,KAAKsE,YAAL,CAAkB5G,KAAKsC,IAAvB,CAAb;AACA,UAAMuE,OAAO,EAAb;AACA,UAAIC,UAAUjG,eAAd;AACA,UAAIkG,uBAAuB,KAA3B;;AAEA,UAAI,CAAED,OAAN,EAAe;AACbA,kBAAUtG,SAASC,gBAAT,CACR,kCADQ,CAAV;AAGD;;AAED,UAAI6B,IAAJ,EAAU;AACRwE,gBAAQnG,OAAR,CAAgB,UAACgD,GAAD,EAAS;AACvB,cACEA,IAAIC,OAAJ,IACAD,IAAIC,OAAJ,CAAYE,OAAZ,KAAwB9D,KAAKuC,EAD7B,IAEAoB,IAAIC,OAAJ,CAAYC,SAAZ,KAA0BvB,IAH5B,EAIE;AACAuE,iBAAKvC,IAAL,CAAUX,GAAV;AACD;AACF,SARD;;AAUA,YAAIkD,QAAQA,KAAKlE,MAAb,IAAuB3C,KAAKwE,MAAhC,EAAwC;AACtCqC,eAAKlG,OAAL,CAAa,UAACqG,UAAD,EAAgB;AAC3B,gBAAMC,sBAAsBD,UAA5B;AACA,gBAAME,WAAWD,oBAAoBrD,OAApB,CAA4BuD,aAA7C;AACA,gBAAMnC,SAASiC,oBAAoBP,UAAnC;AACA,gBAAMU,WAAWhI,YAAYiI,aAAZ,CAA0BH,QAA1B,EAAoClH,IAApC,CAAjB;AACA,gBAAMsH,mBAAmBlI,YAAYmI,gBAAZ,CAA6BH,QAA7B,EACpBjG,aADoB,CACN,UADM,CAAzB;AAEA,gBAAIqG,mBAAmB,IAAvB;;AAEA;AACA,mBAAKf,aAAL,CAAmBzG,KAAKsD,IAAxB,EAA8B2D,oBAAoBT,eAAlD;;AAEA;AACAgB,4DACKF,iBAAiBG,OAAjB,CAAyBC,QAD9B;;AAIA;AACAF,6BAAiB7G,OAAjB,CAAyB,UAACwD,OAAD,EAAa;AACpC,kBAAMiB,QAAQjB,OAAd;;AAEA,kBAAI,MAAMiB,MAAMuC,QAAhB,EAA0B;AACxBvC,sBAAMxB,OAAN,CAAcwC,UAAd,GAA2BpG,KAAKsD,IAAhC;AACAyD,uCAAuB,CAAEA,oBAAF,GACrB3H,YAAYwI,eAAZ,CAA4BxC,KAA5B,EAAmCpF,IAAnC,CADqB,GAErB+G,oBAFF;;AAIA/B,uBAAOnD,YAAP,CAAoBuD,KAApB,EAA2B6B,mBAA3B;AACD;AACF,aAXD;;AAaA;AACAA,gCAAoBrD,OAApB,CAA4ByC,QAA5B,GAAuCrG,KAAKsD,IAA5C;;AAEA;AACA2D,gCAAoBY,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;;AAEA;AACA,mBAAK7H,YAAL,CAAkBuH,gBAAlB,EAAoC;AAClCzG,wBAAU,KADwB;AAElCC,sBAAQ,CAAChB,KAAKY,GAAN,EAAW,OAAKgC,oBAAhB,CAF0B;AAGlC3B,uBAAS;AAHyB,aAApC;;AAMA,gBAAI8F,oBAAJ,EAA0B;AACxB,qBAAK7G,eAAL;AACD;AACF,WA/CD;AAgDD;AACF,OA7DD,MA6DO;AACLuD,gBAAQC,IAAR,EAAc;AAAd,uDAEa1D,KAAKuC,EAFlB,wBAGUvC,KAAKsC,IAHf;AAKD;AACF;;AAED;;;;;;;;;iCAMaA,I,EAAM;AACjB,UAAI,WAAWA,IAAf,EAAqB;AACnB,eAAO,UAAP;AACD;;AAED,UAAI,CAAE,KAAKvC,MAAL,CAAYgI,QAAZ,CAAqBzF,IAArB,CAAN,EAAkC;AAChC,eAAO,KAAP;AACD;;AAED,aAAOA,IAAP;AACD;;AAED;;;;;;sBAGYjD,O,EAAS;AACnB,WAAKE,QAAL,GAAgBF,OAAhB;AACA,WAAKG,UAAL,GAAkBC,OAAOC,IAAP,CAAYL,OAAZ,CAAlB;AACD;;AAED;;;;;;sBAGUC,K,EAAO;AACf,WAAK0I,MAAL,GAAc1I,KAAd;AACA,WAAKK,OAAL,GAAeL,MAAM2I,MAArB;AACA,WAAKrI,SAAL,GAAiBN,MAAM6C,QAAvB;AACA,WAAKtC,UAAL,GAAkBP,MAAM4I,SAAxB;AACA,WAAKpI,WAAL,GAAmBR,MAAM6I,UAAzB;AACA,WAAKpI,MAAL,GAAcT,MAAM8I,KAApB;AACA,WAAKxF,oBAAL,GAA4BtD,MAAM+I,mBAAlC;AACD;;;kCA7pBoBnB,Q,EAAUlH,I,EAAM;AACnC,UAAIoH,WAAW,KAAf;AACA,UAAI3C,OAAOzE,KAAKyE,IAAhB;;AAEA,UAAIA,IAAJ,EAAU;AACR;AACA,YAAIyC,YAAYlH,KAAKyE,IAAL,CAAUyC,QAAV,CAAhB,EAAqC;AACnCzC,iBAAOhF,OAAO+D,MAAP,CAAc,EAAd,EAAkBxD,KAAKyE,IAAL,CAAUyC,QAAV,CAAlB,EAAuC,EAAEA,kBAAF,EAAvC,CAAP;AACD;;AAEDE,mBAAWpH,KAAKwE,MAAL,CAAYC,IAAZ,CAAX;AACD,OAPD,MAOO;AACL2C,mBAAWpH,KAAKwE,MAAL,EAAX;AACD;;AAED,aAAO4C,QAAP;AACD;;AAED;;;;;;;;;qCAMwBK,O,EAAS;AAC/B,UAAMxC,KAAKzE,SAASiB,aAAT,CAAuB,KAAvB,CAAX;;AAEAwD,SAAG5D,SAAH,GAAeoG,OAAf;AACA,aAAOxC,GAAGqD,iBAAV;AACD;;AAED;;;;;;;;;;;;;kCAUqBlI,M,EAAQwE,U,EAAY;AACvC,UAAI2D,QAAQ,IAAZ;;AAEA;AACA,UACE,qBAAoBnI,MAApB,yCAAoBA,MAApB,MACA,GAAGoI,cAAH,CAAkBC,IAAlB,CAAuBrI,MAAvB,EAA+B,UAA/B,CADA,IAEA,GAAGoI,cAAH,CAAkBC,IAAlB,CAAuBrI,MAAvB,EAA+B,QAA/B,CAFA,IAGA,GAAGoI,cAAH,CAAkBC,IAAlB,CAAuBrI,MAAvB,EAA+B,SAA/B,CAJF,EAKE;AACAmI,gBAAQnI,OAAOY,MAAP,CAAcZ,MAAd,CACN,UAACsI,KAAD;AAAA,iBAAW9D,WAAWxE,OAAOW,QAAlB,MAAgC2H,KAA3C;AAAA,SADM,CAAR;AAGA,eAAOC,QAAQJ,MAAM5F,MAAd,MAA0BvC,OAAOa,OAAxC;AACD;;AAEDwC,cAAQmF,GAAR,uDACWxI,MADX;;AAKA,aAAOmI,KAAP;AACD;;AAED;;;;;;;;;uCAM0B3H,G,EAAK;AAC7B,aAAO7B,IAAI6B,GAAJ,CAAP;AACD;;AAED;;;;;;;;;;oCAOuB+C,G,EAAK3D,I,EAAM;AAChC,UAAI,gBAAgBA,KAAKsC,IAAzB,EAA+B;AAC7B,eAAOqB,IAAIkF,YAAJ,CAAiB,gBAAjB,KACLlF,IAAIkF,YAAJ,CAAiB,YAAjB,CADF;AAED;;AAED,aAAO,KAAP;AACD;;;;;AAskBH;;AAEA;AACA;AACA;AACA;;;AACA,IAAMC,SAAS,IAAI1J,WAAJ,CAAgBC,OAAhB,EAAyBC,KAAzB,CAAf;AACA","file":"huron.js","sourcesContent":["const md5 = require('js-md5');\n\n/* eslint-disable no-underscore-dangle */\n// Accept the huron.js module for Huron development\nif (module.hot) {\n  module.hot.accept();\n}\n\n/** Class for inserting HTML snippets at particular insertion points.\n * Uses require() to grab html partials, then inserts that html\n * into an element with attribute [huron-id] corresponding to the reference URI of the target KSS section,\n * and [huron-type] corresponding with the required KSS field\n */\nclass InsertNodes {\n\n  constructor(modules, store) {\n    /** webpack module list in which keys are relative require paths and values are the module contents */\n    this._modules = modules;\n    /** array of module keys */\n    this._moduleIds = Object.keys(modules);\n    /** reference to the huron config */\n    this._config = null;\n    /** KSS sections organized in various formats including by reference URI, by module key, and modules sorted by parent/child */\n    this._sections = null;\n    /** Key/value pairs of partner data and template files */\n    this._templates = null;\n    /** array of prototypes */\n    this._prototypes = null;\n    /** array of valid huron placeholder types */\n    this._types = null;\n\n    /** Cache for module metadata */\n    this.meta = {};\n\n    /** Reference to entire memory store */\n    this.store = store;\n\n    // Inits\n    this.cycleModules();\n    this.cycleStyleguide();\n  }\n\n  /**\n   * Apply a modifier to a render function\n   *\n   * @param {string} modifier - target modifier\n   * @param {object} meta - module metadata\n   * @return {string} rendered - the modified HTML module\n   */\n  static applyModifier(modifier, meta) {\n    let rendered = false;\n    let data = meta.data;\n\n    if (data) {\n      // If we have a modifier, use it, otherwise use the entire data set\n      if (modifier && meta.data[modifier]) {\n        data = Object.assign({}, meta.data[modifier], { modifier });\n      }\n\n      rendered = meta.render(data);\n    } else {\n      rendered = meta.render();\n    }\n\n    return rendered;\n  }\n\n  /**\n   * Get markup from any type of module (html, json or template)\n   *\n   * @param {string} content - String corresponding to markup\n   * @return {object} el.firstElementChild - HTML module\n   */\n  static convertToElement(content) {\n    const el = document.createElement('div');\n\n    el.innerHTML = content;\n    return el.firstElementChild;\n  }\n\n  /**\n   * Filter module object by module key or module type\n   *\n   * @param {object} filter - Filter for modules. Options:\n   * @param {string} filter.property - Which property to filter ('key' or 'type')\n   * @param {array} filter.values - Values for property\n   * @param {bool} filter.include - Whether the values should be included or excluded (true = include, false = exclude)\n   * @param {object} moduleMeta - Filter for modules. Fields explained in the filterModules() function docs\n   * @return {bool} match - determine if modules need to be filtered\n   */\n  static filterModules(filter, moduleMeta) {\n    let match = true;\n\n    // Check if we should filter out any modules\n    if (\n      'object' === typeof filter &&\n      {}.hasOwnProperty.call(filter, 'property') &&\n      {}.hasOwnProperty.call(filter, 'values') &&\n      {}.hasOwnProperty.call(filter, 'include')\n    ) {\n      match = filter.values.filter(\n        (value) => moduleMeta[filter.property] === value\n      );\n      return Boolean(match.length) === filter.include;\n    }\n\n    console.log(` // eslint-disable-line no-console\n      filter ${filter} is not in a valid format.\n      module filters must include 'property', 'values', and 'include' properties\n    `);\n\n    return match;\n  }\n\n  /**\n   * Generate a hash string from a module key\n   *\n   * @param {string} key - module key (require path) to convert into a hash\n   * @return {string} key - generated MD5 Hash\n   */\n  static generateModuleHash(key) {\n    return md5(key);\n  }\n\n  /**\n   * Check if this tag is a styleguide helper\n   *\n   * @param {object} tag - tag to check\n   * @param {object} meta - module metadata\n   * @return {bool}\n   */\n  static isSectionHelper(tag, meta) {\n    if ('prototype' === meta.type) {\n      return tag.hasAttribute('huron-sections') ||\n        tag.hasAttribute('huron-menu');\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace all template markers with the actual template markup.\n   *\n   * @param {string} context - The hash context for the module\n   * @param {object} filter - Filter for modules. Fields explained in the filterModules() function docs\n   */\n  cycleModules(context = false, filter = false) {\n    let moduleList = {};\n    let elementList = context;\n\n    // We're replacing top-level elements\n    if (! elementList) {\n      this.regenCache();\n\n      // Find all top-level huron placeholders\n      elementList = document.querySelectorAll(\n        '[data-huron-id][data-huron-type]'\n      );\n    }\n\n    moduleList = this.getModuleListFromTags(elementList);\n\n    // Loop through modules array\n    Object.keys(moduleList).forEach((key) => {\n      const module = this._modules[key];\n      const replaceElements = moduleList[key];\n\n      this.loadModule(key, module, replaceElements, true, filter);\n    });\n  }\n\n  /**\n   * Helper for reloading sections only\n   */\n  cycleSections() {\n    this.cycleModules(false, {\n      property: 'type',\n      values: ['section'],\n      include: true,\n    });\n  }\n\n  /**\n   * Reload styleguide sections and menu helpers\n   */\n  cycleStyleguide() {\n    const sectionsQuery = document.querySelector('[huron-sections]');\n    const menuQuery = document.querySelector('[huron-menu]');\n\n    // Sections\n    if (sectionsQuery) {\n      sectionsQuery.innerHTML = '';\n      this.outputSections(null, sectionsQuery);\n      this.cycleSections();\n    }\n\n    // Menu\n    if (menuQuery) {\n      menuQuery.innerHTML = '';\n\n      if (null === document.querySelector('.section-menu__expand')) {\n        const menuTrigger = document.createElement('button');\n\n        menuTrigger.classList.add('section-menu__expand');\n        menuTrigger.innerHTML = 'Sections Menu';\n        document.body.insertBefore(\n          menuQuery.appendChild(menuTrigger),\n          document.body.childNodes[0]\n        );\n\n        // Add menu trigger handler\n        menuTrigger.addEventListener('click', () => {\n          document.body.classList.toggle('section-menu-open');\n        });\n      }\n\n      // Create menu\n      this.outputMenu(null, menuQuery);\n    }\n  }\n\n  /**\n   * Get module metadata from a module require path\n   *\n   * @param  {string} key - Module require path\n   * @return {object} containing module id, module type, key and the module contents\n   */\n  getMetaFromPath(key, module) {\n    const sections = this._sections.sectionsByPath;\n    const templateTypes = this._types.filter((type) => 'prototype' !== type);\n    let id = false;\n    let type = false;\n\n    /* eslint-disable space-unary-ops */\n    if (-1 !== key.indexOf('./prototypes')) {\n    /* eslint-enable space-unary-ops */\n      const prototype = Object.keys(this._prototypes)\n        .filter((name) => this._prototypes[name] === key);\n\n      if (prototype.length) {\n        id = prototype[0];\n        type = 'prototype';\n      }\n    } else if (key === this._sectionTemplatePath) {\n      id = 'sections-template';\n      type = 'sections-template';\n    } else {\n      let testTypes = [];\n      const testSections = Object.keys(sections).filter((section) => {\n        const tempTypes = templateTypes.filter(\n          (currentType) => sections[section][`${currentType}Path`] === key\n        );\n\n        if (tempTypes.length) {\n          testTypes = tempTypes;\n          return true;\n        }\n\n        return false;\n      });\n\n      if (\n        testSections &&\n        testSections.length &&\n        testTypes &&\n        testTypes.length\n      ) {\n        id = sections[testSections[0]].referenceURI;\n        type = testTypes[0];\n      }\n    }\n\n    if (id && type) {\n      const hashKey = 'data' === type ? this._templates[key] : key;\n      const renderData = this.getModuleRender(type, key, module);\n      const hash = InsertNodes.generateModuleHash(hashKey);\n\n      if (renderData) {\n        return Object.assign({ id, type, key, hash, module }, renderData);\n      }\n    }\n\n    console.warn( // eslint-disable-line no-console\n      `Module '${key}' does not exist on the page\n      or is no longer in use`\n    );\n    return false;\n  }\n\n  /**\n   * Check if a tag is a huron placeholder and, if so,\n   * return its associated module key\n   *\n   * @param {object} tag - tag to check\n   * @return {bool} associated module key\n   */\n  getModuleKeyFromTag(tag) {\n    const type = tag.dataset.huronType;\n    const id = tag.dataset.huronId;\n    const section = this._sections.sectionsByURI[id];\n\n    if (id && type) {\n      if (section) {\n        return section[`${type}Path`];\n      } else if ('prototype' === type) {\n        return this._prototypes[id];\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if an array of elements contains a Huron placeholder\n   *\n   * @param {array} tags - array of DOM nodes\n   * @param {bool} recurse - should we recurse this function with a new array\n   * @return {object} moduleList - Huron placeholder DOM node\n   */\n  getModuleListFromTags(elements, recurse = true) {\n    const moduleList = {};\n    let newList = {};\n\n    if (elements && elements.length) {\n      elements.forEach((element) => {\n        const moduleKey = this.getModuleKeyFromTag(element);\n\n        if (moduleKey) {\n          if (! moduleList[moduleKey]) {\n            moduleList[moduleKey] = [];\n          }\n          moduleList[moduleKey].push(element);\n        } else if (recurse) {\n          newList = this.getModuleListFromTags(\n            [...element.querySelectorAll('[data-huron-id][data-huron-type]')],\n            false\n          );\n\n          Object.keys(newList).forEach((key) => {\n            moduleList[key] = moduleList[key] ?\n              moduleList[key].concat(newList[key]) :\n              newList[key];\n          });\n        }\n      });\n    }\n\n    return moduleList;\n  }\n\n  /**\n   * Transform every module into a predictable object\n   *\n   * @param {object} type - Module metadata\n   * @param {mixed} module - Module contents\n   * @return {object} containing render function, render data and module id\n   */\n  getModuleRender(type, key, module) {\n    let render = false;\n    let data = false;\n\n    if ('template' === type && 'function' === typeof module) {\n      // It's a render function for a template\n      render = module;\n      data = this._modules[this._templates[key]];\n    } else if (\n      'sections-template' === type &&\n      'function' === typeof module\n    ) {\n      // It's a kss section template\n      render = module;\n    } else if (\n      'section' === type &&\n      'object' === typeof module\n    ) {\n      // It's section data\n      render = this._modules[this._sectionTemplatePath];\n      data = module;\n    } else if (\n      ('template' === type || 'description' === type || 'prototype' === type) &&\n      'string' === typeof module\n    ) {\n      // it's straight HTML\n      render = () => module;\n    } else if ('data' === type && 'object' === typeof module) {\n      // It's a data file (.json)\n      render = this._modules[this._templates[key]];\n      data = module;\n    }\n\n    // Only need render, as data will be left empty for static HTML\n    if (render) {\n      return { render, data };\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace all sections. For hot reloading use when the section template has changed.\n   *\n   * @param {object} replaceElements - The context (e.g. document) that you will query for the template ID to replace\n   * @param {string} key - Module require path\n   * @param {mixed} module - Module contents\n   * @param {bool} cached - Whether or not to use cached values for module replacement\n   * @param {object} filter - Filter for modules. Fields explained in the filterModules() function docs\n   */\n  loadModule(key, module, replaceElements, cached = false, filter = false) {\n    let shouldLoad = true;\n    let moduleMeta = false;\n\n    // Check if we should load from internal module metadata cache\n    if (cached) {\n      moduleMeta = this.meta[key];\n    } else {\n      moduleMeta = this.meta[key] = this.getMetaFromPath(key, module);\n    }\n\n    if (moduleMeta) {\n      if (filter) {\n        shouldLoad = InsertNodes.filterModules(filter, moduleMeta);\n      }\n\n      if (shouldLoad) {\n        this.replaceTemplate(moduleMeta, replaceElements);\n      }\n    }\n  }\n\n  /*\n   * Helper function for inserting styleguide sections.\n   *\n   * Recurses over sorted styleguide sections and inserts a <ul> to be used as a menu for each section\n   */\n  outputMenu(parent, el, sections = this._sections.sorted) {\n    let templateId = null;\n    let newEl = el;\n\n    Object.keys(sections).forEach((section) => {\n      const hasSubmenu = Object.keys(sections[section]).length;\n      let menuTarget;\n      let nextMenu;\n\n      if (parent) {\n        templateId = `${parent}-${section}`;\n      } else {\n        templateId = section;\n      }\n\n      if (newEl) {\n        const title = this._sections\n            .sectionsByURI[templateId] ?\n          this._sections\n            .sectionsByURI[templateId]\n            .header :\n          templateId;\n        const sectionMenu = document.createElement('ul');\n        const menuItem = document.createElement('li');\n        const link = `<a href=\"#styleguide-section-${templateId}\">${title}</a>`;\n\n        sectionMenu.classList.add('section-menu');\n        menuItem.classList.add('section-menu__item');\n        menuItem.innerHTML = link;\n\n        // Check if this is a UL and, if not, create one\n        if ('UL' !== newEl.tagName) {\n          menuTarget = sectionMenu.cloneNode();\n          newEl.appendChild(menuTarget);\n          newEl = menuTarget;\n        }\n\n        // Has subsections\n        if (hasSubmenu) {\n          nextMenu = sectionMenu.cloneNode();\n          nextMenu.classList.add('section-menu--submenu');\n          menuItem.classList.add('section-menu__item--has-submenu');\n          menuItem.appendChild(nextMenu);\n        }\n\n        newEl.appendChild(menuItem);\n\n        if (hasSubmenu) {\n          this.outputMenu(\n            templateId,\n            nextMenu,\n            sections[section]\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Helper function for inserting styleguide sections.\n   *\n   * Recurses over sorted styleguide sections and inserts a <section> tag with [huron-id] equal to the section template name.\n   */\n  outputSections(parent, el, sections = this._sections.sorted) {\n    let templateId = null;\n    let placeholder = null;\n\n    Object.keys(sections).forEach((section) => {\n      let istopLevel = false;\n      let topLevelWrapper = null;\n      let topLevelSection = null;\n      let insertionEl = el;\n\n      // Generate section ID and check if it is top-level\n      if (parent) {\n        templateId = `${parent}-${section}`;\n      } else {\n        templateId = section;\n        istopLevel = true;\n      }\n\n      if (el) {\n        // Generate huron placeholder for this section\n        placeholder = document.createElement('div');\n        placeholder.dataset.huronId = templateId;\n        placeholder.dataset.huronType = 'section';\n\n        if (istopLevel) {\n          // Generate wrapper to contain top-level section and all subsections underneath it\n          topLevelWrapper = document.createElement('div');\n          topLevelWrapper.classList.add('section--top-level__wrapper');\n\n          // Generate wrapper for top-level section\n          topLevelSection = document.createElement('div');\n          topLevelSection.classList.add('section', 'section--top-level');\n\n          // Append wrappers to huron-sections element\n          topLevelSection.appendChild(placeholder);\n          topLevelWrapper.appendChild(topLevelSection);\n          el.appendChild(topLevelWrapper);\n          insertionEl = topLevelWrapper;\n        } else {\n          // If this is not top-level, append placeholder\n          el.appendChild(placeholder);\n        }\n      }\n\n      // Recursively call this function to insert other sections\n      if (Object.keys(sections[section]).length && placeholder) {\n        this.outputSections(\n          templateId,\n          insertionEl,\n          sections[section]\n        );\n      }\n    });\n  }\n\n  /**\n   * Regenerate module meta cache\n   */\n  regenCache() {\n    Object.keys(this._modules).forEach((moduleKey) => {\n      this.meta[moduleKey] = this.getMetaFromPath(\n        moduleKey, this._modules[moduleKey]\n      );\n    });\n  }\n\n  /**\n   * Recursively remove old tags\n   *\n   * @param {string} hash - hash of module for which we need to remove old tags\n   * @param {object} tag - tag to start our search with\n   *                       (usually the tag immediately preceding the current placeholder)\n   */\n  removeOldTags(hash, tag) {\n    if (tag && tag.dataset) {\n      if (\n        tag.dataset.parentHash === hash &&\n        tag.dataset.selfHash !== hash\n      ) {\n        // This is a child of the current module,\n        // so remove it and its children (if applicable)\n        const childrenHash = tag.dataset.selfHash;\n        let nextTag = tag.previousSibling;\n\n        if (childrenHash) {\n          this.removeOldTags(childrenHash, nextTag);\n          // Reset nextTag if we removed a child\n          nextTag = tag.previousSibling;\n        }\n\n        tag.parentNode.removeChild(tag);\n        this.removeOldTags(hash, nextTag);\n      }\n    }\n  }\n\n  /**\n   * Replace a single template marker with template content.\n   *\n   * @param {object} replaceElements - Array of elements to check for Huron placeholders\n   * @param {object} meta - Module metadata\n   */\n  replaceTemplate(meta, replaceElements) {\n    const type = this.validateType(meta.type);\n    const tags = [];\n    let replace = replaceElements;\n    let hasStyleguideHelpers = false;\n\n    if (! replace) {\n      replace = document.querySelectorAll(\n        '[data-huron-id][data-huron-type]'\n      );\n    }\n\n    if (type) {\n      replace.forEach((tag) => {\n        if (\n          tag.dataset &&\n          tag.dataset.huronId === meta.id &&\n          tag.dataset.huronType === type\n        ) {\n          tags.push(tag);\n        }\n      });\n\n      if (tags && tags.length && meta.render) {\n        tags.forEach((currentTag) => {\n          const modifiedPlaceholder = currentTag;\n          const modifier = modifiedPlaceholder.dataset.huronModifier;\n          const parent = modifiedPlaceholder.parentNode;\n          const rendered = InsertNodes.applyModifier(modifier, meta);\n          const renderedTemplate = InsertNodes.convertToElement(rendered)\n              .querySelector('template');\n          let renderedContents = null;\n\n          // Remove existing module tags\n          this.removeOldTags(meta.hash, modifiedPlaceholder.previousSibling);\n\n          // Get the contents of the rendered template\n          renderedContents = [\n            ...renderedTemplate.content.children,\n          ];\n\n          // Insert each tag of the template contents before placeholder\n          renderedContents.forEach((element) => {\n            const newEl = element;\n\n            if (1 === newEl.nodeType) {\n              newEl.dataset.parentHash = meta.hash;\n              hasStyleguideHelpers = ! hasStyleguideHelpers ?\n                InsertNodes.isSectionHelper(newEl, meta) :\n                hasStyleguideHelpers;\n\n              parent.insertBefore(newEl, modifiedPlaceholder);\n            }\n          });\n\n          // Add module hash to this placeholder\n          modifiedPlaceholder.dataset.selfHash = meta.hash;\n\n          // Hide the placeholder\n          modifiedPlaceholder.style.display = 'none';\n\n          // Recursively load modules, excluding the current one\n          this.cycleModules(renderedContents, {\n            property: 'key',\n            values: [meta.key, this._sectionTemplatePath],\n            include: false,\n          });\n\n          if (hasStyleguideHelpers) {\n            this.cycleStyleguide();\n          }\n        });\n      }\n    } else {\n      console.warn( // eslint-disable-line no-console\n        `Could not render module\n        section: ${meta.id}\n        type: ${meta.type}`\n      );\n    }\n  }\n\n  /**\n   * Verify specified element is using an acceptable huron type\n   *\n   * @param  {string} type - type of partial (template, data, description, section or prototype )\n   * @return {string} type - huron type or 'template' if invalid\n   */\n  validateType(type) {\n    if ('data' === type) {\n      return 'template';\n    }\n\n    if (! this._types.includes(type)) {\n      return false;\n    }\n\n    return type;\n  }\n\n  /*\n   * Set new modules object\n   */\n  set modules(modules) {\n    this._modules = modules;\n    this._moduleIds = Object.keys(modules);\n  }\n\n  /*\n   * Set store\n   */\n  set store(store) {\n    this._store = store;\n    this._config = store.config;\n    this._sections = store.sections;\n    this._templates = store.templates;\n    this._prototypes = store.prototypes;\n    this._types = store.types;\n    this._sectionTemplatePath = store.sectionTemplatePath;\n  }\n}\n/* eslint-enable no-underscore-dangle */\n\n// Create a new instance of the InsertNodes class\n/*eslint-disable*/\n// Create object for modifiying the templates on the page and\n// initial first templates.\nconst insert = new InsertNodes(modules, store);\n/*eslint-enable*/\n"]}