{"version":3,"sources":["../../src/cli/handle-html.js"],"names":["path","require","fs","htmlHandler","updateTemplate","filepath","section","store","file","parse","content","readFileSync","newSection","templatePath","writeFile","referenceURI","templateContent","sectionPath","writeSectionData","setIn","kssPath","console","log","base","deleteTemplate","removeFile","updatePrototype","requirePath","name","deletePrototype"],"mappings":";;;;;;;AAEA;;AAEA,IAAMA,OAAOC,QAAQ,MAAR,CAAb,C,CAJA;;AAKA,IAAMC,KAAKD,QAAQ,UAAR,CAAX;;AAEA;AACO,IAAME,oCAAc;AAC3B;;AAEE;;;;;;;;AAQAC,gBAXyB,0BAWVC,QAXU,EAWAC,OAXA,EAWSC,KAXT,EAWgB;AACvC,QAAMC,OAAOR,KAAKS,KAAL,CAAWJ,QAAX,CAAb;AACA,QAAMK,UAAUR,GAAGS,YAAH,CAAgBN,QAAhB,EAA0B,MAA1B,CAAhB;AACA,QAAMO,aAAaN,OAAnB;;AAEA,QAAII,OAAJ,EAAa;AACXE,iBAAWC,YAAX,GAA0B,aAAMC,SAAN,CACxBR,QAAQS,YADgB,EAExB,UAFwB,EAGxBV,QAHwB,EAIxBK,OAJwB,EAKxBH,KALwB,CAA1B;AAOAK,iBAAWI,eAAX,GAA6BN,OAA7B;;AAEA;AACAE,iBAAWK,WAAX,GAAyB,aAAMC,gBAAN,CAAuBX,KAAvB,EAA8BK,UAA9B,CAAzB;;AAEA,aAAOL,MACJY,KADI,CAEH,CAAC,UAAD,EAAa,gBAAb,EAA+Bb,QAAQc,OAAvC,CAFG,EAGHR,UAHG,EAKJO,KALI,CAMH,CAAC,UAAD,EAAa,eAAb,EAA8Bb,QAAQS,YAAtC,CANG,EAOHH,UAPG,CAAP;AASD;;AAEDS,YAAQC,GAAR,WAAoBd,KAAKe,IAAzB;AACA,WAAOhB,KAAP;AACD,GA1CwB;;;AA4CzB;;;;;;;;AAQAiB,gBApDyB,0BAoDVnB,QApDU,EAoDAC,OApDA,EAoDSC,KApDT,EAoDgB;AACvC,QAAMK,aAAaN,OAAnB;;AAEA,iBAAMmB,UAAN,CACEb,WAAWG,YADb,EAEE,UAFF,EAGEV,QAHF,EAIEE,KAJF;;AAOA,WAAOK,WAAWC,YAAlB;;AAEA,WAAON,MACJY,KADI,CAEH,CAAC,UAAD,EAAa,gBAAb,EAA+Bb,QAAQc,OAAvC,CAFG,EAGHR,UAHG,EAKJO,KALI,CAMH,CAAC,UAAD,EAAa,eAAb,EAA8Bb,QAAQS,YAAtC,CANG,EAOHH,UAPG,CAAP;AASD,GAzEwB;;;AA2EzB;;;;;;;AAOAc,iBAlFyB,2BAkFTrB,QAlFS,EAkFCE,KAlFD,EAkFQ;AAC/B,QAAMC,OAAOR,KAAKS,KAAL,CAAWJ,QAAX,CAAb;AACA,QAAMK,UAAUR,GAAGS,YAAH,CAAgBN,QAAhB,EAA0B,MAA1B,CAAhB;;AAEA,QAAIK,OAAJ,EAAa;AACX,UAAMiB,cAAc,aAAMb,SAAN,CAClBN,KAAKoB,IADa,EAElB,WAFkB,EAGlBvB,QAHkB,EAIlBK,OAJkB,EAKlBH,KALkB,CAApB;;AAQA,aAAOA,MAAMY,KAAN,CACH,CAAC,YAAD,EAAeX,KAAKoB,IAApB,CADG,EAEHD,WAFG,CAAP;AAID;;AAEDN,YAAQC,GAAR,WAAoBd,KAAKe,IAAzB;AACA,WAAOhB,KAAP;AACD,GAvGwB;;;AAyGzB;;;;;;;AAOAsB,iBAhHyB,2BAgHTxB,QAhHS,EAgHCE,KAhHD,EAgHQ;AAC/B,QAAMC,OAAOR,KAAKS,KAAL,CAAWJ,QAAX,CAAb;AACA,QAAMsB,cAAc,aAAMF,UAAN,CAClBjB,KAAKoB,IADa,EAElB,WAFkB,EAGlBvB,QAHkB,EAIlBE,KAJkB,CAApB;;AAOA,WAAOA,MAAMY,KAAN,CACH,CAAC,YAAD,EAAeX,KAAKoB,IAApB,CADG,EAEHD,WAFG,CAAP;AAID;AA7HwB,CAApB","file":"handle-html.js","sourcesContent":["/** @module cli/html-handler */\n\nimport { utils } from './utils';\n\nconst path = require('path');\nconst fs = require('fs-extra');\n\n/* eslint-disable */\nexport const htmlHandler = {\n/* eslint-enable */\n\n  /**\n   * Handle update of an HMTL template\n   *\n   * @function updateTemplate\n   * @param {string} filepath - filepath of changed file (comes from gaze)\n   * @param {object} section - contains KSS section data\n   * @param {object} store - memory store\n   */\n  updateTemplate(filepath, section, store) {\n    const file = path.parse(filepath);\n    const content = fs.readFileSync(filepath, 'utf8');\n    const newSection = section;\n\n    if (content) {\n      newSection.templatePath = utils.writeFile(\n        section.referenceURI,\n        'template',\n        filepath,\n        content,\n        store\n      );\n      newSection.templateContent = content;\n\n      // Rewrite section data with template content\n      newSection.sectionPath = utils.writeSectionData(store, newSection);\n\n      return store\n        .setIn(\n          ['sections', 'sectionsByPath', section.kssPath],\n          newSection\n        )\n        .setIn(\n          ['sections', 'sectionsByURI', section.referenceURI],\n          newSection\n        );\n    }\n\n    console.log(`File ${file.base} could not be read`);\n    return store;\n  },\n\n  /**\n   * Handle removal of an HMTL template\n   *\n   * @function deleteTemplate\n   * @param {string} filepath - filepath of changed file (comes from gaze)\n   * @param {object} section - contains KSS section data\n   * @param {object} store - memory store\n   */\n  deleteTemplate(filepath, section, store) {\n    const newSection = section;\n\n    utils.removeFile(\n      newSection.referenceURI,\n      'template',\n      filepath,\n      store\n    );\n\n    delete newSection.templatePath;\n\n    return store\n      .setIn(\n        ['sections', 'sectionsByPath', section.kssPath],\n        newSection\n      )\n      .setIn(\n        ['sections', 'sectionsByURI', section.referenceURI],\n        newSection\n      );\n  },\n\n  /**\n   * Handle update for a prototype file\n   *\n   * @function updatePrototype\n   * @param {string} filepath - filepath of changed file (comes from gaze)\n   * @param {object} store - memory store\n   */\n  updatePrototype(filepath, store) {\n    const file = path.parse(filepath);\n    const content = fs.readFileSync(filepath, 'utf8');\n\n    if (content) {\n      const requirePath = utils.writeFile(\n        file.name,\n        'prototype',\n        filepath,\n        content,\n        store\n      );\n\n      return store.setIn(\n          ['prototypes', file.name],\n          requirePath\n        );\n    }\n\n    console.log(`File ${file.base} could not be read`);\n    return store;\n  },\n\n  /**\n   * Handle removal of a prototype file\n   *\n   * @function deletePrototype\n   * @param {string} filepath - filepath of changed file (comes from gaze)\n   * @param {object} store - memory store\n   */\n  deletePrototype(filepath, store) {\n    const file = path.parse(filepath);\n    const requirePath = utils.removeFile(\n      file.name,\n      'prototype',\n      filepath,\n      store\n    );\n\n    return store.setIn(\n        ['prototypes', file.name],\n        requirePath\n      );\n  },\n};\n"]}